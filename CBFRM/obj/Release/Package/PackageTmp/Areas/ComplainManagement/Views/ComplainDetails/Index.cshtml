@model CBFRM.Areas.ComplainManagement.Models.UserViewModel
@{
	ViewBag.Title = "Tracker";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{

	@Styles.Render("~/Content/DataTable/css")
	<link href="~/Content/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Content/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" rel="stylesheet" />

}

<div class="page-container">
	<div class="page-content-wrapper">
		<!-- BEGIN CONTENT BODY -->
		<div class="page-content">
			<div class="portlet box blue last-line">
				<style>


					.theadth {
					
						color: white;
						background-color: #4c87b9;
					}

					.classheadcenter {
						text-align: center;
						
					}
					.label-success {
						background-color: #36c6d3;
					}
				</style>
				<div class="portlet-body" style="background-color:#eff3f8">
					<form id="IncidentSearchForm" role="form" class="form-horizontal" action="~/IncidentManagement/ExistingFinalIncident/Index" method="post">
						<div class="portlet-body form">

							<div class="form-body">
								<div class="row">

									<div class="col-md-3">

										<div class="form-group form-md-line-input has-success">
											<div class="input-icon">
												<input name="SDate" id="fdate" data-date-format="yyyy/mm/dd"  data-date-end-date="-0d"  class="form-control date-picker">
												<label for="form_control_1">Start Date</label>

												<i class="fa fa-calendar"></i>
											</div>
										</div>
									</div>
									<div class="col-md-3">


										<div class="form-group form-md-line-input has-success">
											<div class="input-icon">
												<input type="text" id="edate" data-date-format="yyyy/mm/dd" name="EDate"  data-date-end-date="-0d" class="form-control  date-picker">
												<label for="form_control_1">End Date</label>

												<i class="fa fa-calendar"></i>
											</div>
										</div>
									</div>
									<div class="col-md-2">


										<div class="form-group form-md-line-input has-success">
											<div class="input-icon">
												<select class="form-control tip-top color red" id="dllCountry" name="CountryCode" data-toggle="tooltip">
													<option value=""></option>
													@foreach (var item in Model.spGetCountries.OrderBy(x => x.CountryName))
													{


														<option value="@item.CountryCode"> @item.CountryName </option>

													}

												</select>												<label for="form_control_1">Country</label>
												<i class="fa fa-flag"></i>
											</div>
										</div>
									</div>
									<div class="col-md-2" style="padding-left:60px">

										<div class="btn-group">
											<button type="button" class="btn blue bold">Filters </button>
											<button type="button" class="btn blue dropdown-toggle" data-toggle="dropdown">
												<i class="fa fa-angle-down"></i>
											</button>

											<div class="dropdown-menu hold-on-click dropdown-checkboxes" role="menu">
												@foreach (var item in Model.spgetStatus)
												{
													<label>
														<input id="@item.ComplaintStatusID" type="checkbox" onclick="LoadData()" class="statuscls">&nbsp;&nbsp;@item.ComplaintStatusShortName

													</label>
												}

											</div>
										</div>


									</div>
									<div class="col-md-2">
										<div class="form-group">
											<div class="input-group">
												<a href="/ComplainManagement/ComplainForm/Index" class="btn yellow-gold">
													<i class="fa fa-plus"></i>
													Add New Complain

												</a>


											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</form>
				</div>
				<div class="portlet-body" style="background-color:#eff3f8">

					@{


					}
					<table class="table table-striped table-bordered table-hover" id="sample_2">
						<thead class="theadth">
							<tr class="classheadcenter">

								<th class="classheadcenter">Complain ID</th>
								<th class="classheadcenter">Date</th>
								<th style="display:none">Country Code</th>
								<th class="classheadcenter">Country</th>
								<th class="classheadcenter">Vulnerability</th>
								<th class="classheadcenter">Program/Sector</th>
								<th class="classheadcenter">Grant Code</th>
								<th class="classheadcenter">Category</th>
								<th class="classheadcenter">Status</th>
								<th class="classheadcenter">Assigned To</th>
								<th class="classheadcenter">Days left</th>
								<th></th>
								<th></th>
							</tr>
						</thead>
						<tbody>

							@foreach (var item in Model.spEditCBS)
							{
								string daysColor = "";
							


								if (item.DaysafterRecived <= 10 && item.DaysafterRecived >= 1)
								{

									daysColor = "label-default";

								}
								else if (item.DaysafterRecived > 10 && item.DaysafterRecived <= 20)
								{
									daysColor = "label-primary";
								}
								else if (item.DaysafterRecived > 20 && item.DaysafterRecived <= 30)
								{
									daysColor = "label-success";
								}
								else if (item.DaysafterRecived == 0)
								{

									daysColor = "label-warning";
								}
								else if (item.DaysafterRecived < 0)
								{

									daysColor = "label-danger";
								}

								

								<tr>


									<td> @item.CommunityBasedComplaintID</td>
									<td>@item.ReceivedDate</td>
									<td style="display:none">@item.CountryCode</td>
									<td>@item.CountryName</td>
									<td>@item.VulnerabilityTypeName</td>
									<td>@item.FieldSectorCode</td>
									<td>@item.ProjectName</td>
									<td>@item.ComplaintCategoryShortName</td>

									<td>@item.ComplaintStatusName</td>
									<td>@item.UpdateUser</td>
									<td><span class="label label-sm @daysColor Bold" style="font-weight:100">@item.DaysafterRecived</span></td>
									
									<td>
										<a href="@Url.Action("../../ComplainManagement/ComplainForm/Edit/", new { id = item.CommunityBasedComplaintID })" class="btn btn-sm btn-primary">
											<i class="fa fa-edit"></i> Edit
										</a>
									</td>

									<td>

										<button onclick='showMessageConfirmation(this, @item.CommunityBasedComplaintID)' class="btn btn-sm btn-danger">
											<i class="fa fa-trash"></i> Delete
										</button>
									</td>

								</tr>

							}
						</tbody>
					</table>
				</div>
			</div>



		</div>
	</div>
</div>

@section scripts{

	@Scripts.Render("~/bundles/DataTable/jquery")


	<script src="~/Content/assets/global/plugins/bootstrap-timepicker/js/bootstrap-timepicker.min.js" type="text/javascript"></script>
	<script src="~/Content/assets/pages/scripts/components-date-time-pickers.min.js" type="text/javascript"></script>
	<script src="~/Content/assets/global/plugins/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
	<script>
		
		var viewBag = "";
	
		var today = new Date();

		$("#fdate").datepicker({
			changeMonth: true,
			changeYear: true,
			minDate: today // set the minDate to the today's date
			// you can add other options here
		});
        $(document).ready(function () {
            debugger;
            try {
				viewBag = "@TempData["message"]";
			
                //viewBag = viewBag.replace(/-:-/g, "\"");
                // alert("@TempData["message"]")
                if (viewBag != null && viewBag != "" && viewBag.search("You have no rights to delete!") != -1) {
                    showMessage("You have no rights to delete!", viewBag, "warning", "btn-danger");
                }
                else if (viewBag != null && viewBag != "" && viewBag.search("Final Incident Deleted Successfully!") != -1)
                    {
                    showMessage("Final Incident Deleted Successfully!", viewBag, "warning", "btn-danger");
                    }
                else if (viewBag != null && viewBag != "" && viewBag.search("You cannot delete this Final Incident  becuase it has Onsite Incident Created") != -1) {
                    showMessage("You cannot delete this Final Incident  becuase it has Onsite Incident Created", viewBag, "warning", "btn-danger");
                }
            } catch (Exception) {

            }

		});
		var countrCode = "";

		$("#fdate").change(function () {
			//alert("The text has been changed.");
			LoadData();
		});

		$("#edate").change(function () {
			//alert("The text has been changed.");
			LoadData();
		});

		$("#dllCountry").change(function () {

			//debugger;
			if ($('#dllCountry').val() !="") {
				countrCode = $("#dllCountry").val();
			}

			LoadData();



		});
		function LoadData() {

			//debugger;


				try {

					$('#sample_2 tbody').html("");

					var fromdate = "1888-12-12";
					var todate = "1888-12-12";
					var statusid = "0";
					var countrCode = "";

					if ($("#fdate").val() != "") {
						fromdate = $("#fdate").val();
					}

					if ($("#edate").val() != "") {
						todate = $("#edate").val();
					}

					if ($("#dllCountry").val() != "") {
						countrCode = $("#dllCountry").val();
					}


					$('.statuscls').each(function () {
					

						var w = $(this).attr('id');

						if ($('#' + w).prop('checked') == true) {
							statusid = statusid +"," + w;
						}


					});


						debugger;
						$.ajax({
							type: 'Get',
							url: '/ComplainManagement/ComplainDetails/GetData',
							dataType: 'json',

							data: {
								statusid: statusid,
								SDate: fromdate,
								EDate: todate,
								CountryCode: countrCode
							},
							async: false,
							success: function (data) {

								//debugger;

								//var NewRow = '';
								var table = $('#sample_2').DataTable();

								table.rows().remove().draw();
								table.columns([2]).visible(true);

								if (data.length > 0) {

									NewRow = '';

									$.each(data, function (i, item) {
										debugger;

										var daysColor = "";
										if (item.DaysafterRecived <= 10 && item.DaysafterRecived >= 1) {

											daysColor = "label-default";

										}
										else if (item.DaysafterRecived > 10 && item.DaysafterRecived <= 20) {
											daysColor = "label-primary";
										}
										else if (item.DaysafterRecived > 20 && item.DaysafterRecived <= 30) {
											daysColor = "label-success";
										}
										else if (item.DaysafterRecived == 0) {

											daysColor = "label-warning";
										}
										else if (item.DaysafterRecived < 0) {

											daysColor = "label-danger";
										}

										


										var ID = '<span style="font-size:15px;">' + item.CommunityBasedComplaintID + '</span>';

										var editlink = "<a href='../../ComplainManagement/ComplainForm/Edit/" + item.CommunityBasedComplaintID + "' class='btn btn-sm btn-primary'><i class='fa fa-edit'></i> Edit</a>";
										var delbtn = "<button onclick='showMessageConfirmation(this, " + item.CommunityBasedComplaintID + ")' class='btn btn-sm btn-danger'><i class='fa fa-trash'></i> Delete</button>";
										var bgcolor = '<span style="font-size:15px;" class="label label-sm ' + daysColor + ' bold">'  + item.DaysafterRecived + '</span>';
										table.row.add([

											ID,
											item.ReceivedDate,
											item.CountryCode,
											item.CountryName,
											item.VulnerabilityTypeName,
											item.FieldSectorCode,
											item.ProjectName,
											item.ComplaintCategoryShortName,
											item.ComplaintStatusName,
											item.UpdateUser,
											bgcolor,
											//item.DaysafterRecived ,
											editlink,
											delbtn


										]).draw(false);

									});
									table.columns([2]).visible(false);
									
								}
								else {

									showMessage("Complaint Data Not Found", "No Complaints found", "warning", "btn-danger");
								}

							},
							error: function () {

								showMessage("Oops, Something went wrong", "Error Occured while data Get Ajax Call, Please contact with administrator", "warning", "btn-danger");
							}
						});





				}

				catch (Exception) {
					showMessage("Error Occured while Loading the data", Exception.message, "warning", "btn-danger");
				}




		}

        function showMessageConfirmation(row, ID) {
            debugger;
            swal({
                title: 'Are your sure you want to delete This  Complain',
                text: "Complain ID  " +ID,
                type: 'warning',
                allowOutsideClick: false,
                showConfirmButton: true,
                showCancelButton: true,
                confirmButtonClass: 'btn-danger',
                cancelButtonClass: 'btn-info',
                closeOnConfirm: false,
                closeOnCancel: true,
                confirmButtonText: 'Yes, Delete It',
                cancelButtonText: 'No, I am not sure',
            },
                function (isConfirm) {
                    if (isConfirm) {
                        DeleteRecord(row, ID);

                    } else {
                        'Cancelled',
                            'Complain ID Not Deleted :)',
                            'error'
                    }
                });
        }
        //delete ajax function to delete any record
        function DeleteRecord(row, ID) {
            if (ID > 0) {


                debugger;
                $.ajax({
                    type: 'GET',
					url: '/ComplainManagement/ComplainDetails/Delete',
                    dataType: 'json',
                    data: { "ID": ID },
                    async: true,
                    beforeSend: function () {
                        debugger;

                        $('#ProcessingModal').modal('show');
                    },
                    complete: function () {
                        $('#ProcessingModal').modal('hide');
                    },
                    success: function (data) {
                        debugger;
                        if (data.length > 0) {
                            if (data == 'Deleted') {
                                $(row).closest("tr").remove();
                                //sr = Number(sr) - 1;
                                showMessage("Success", "Record Deleted Successfully", "success", "btn-success");
                            }
                            else {
                                showMessage("Oops, Something went wrong", data, "warning", "btn-danger");
                            }
                        }
                    },
                    error: function () {

                        showMessage("Oops, Something went wrong", "Error Occured while Ajax Call, Please contact with administrator", "warning", "btn-danger");
                    }
                });

            }

        }


        function showMessage(MessageTitle, MsgText, ALType, BtnClass) {
            debugger;
            swal({
                title: MessageTitle,
                text: MsgText,
                allowOutsideClick: true,
                type: ALType,
                showCancelButton: false,
                confirmButtonClass: BtnClass,
                confirmButtonText: "Okay",
                closeOnConfirm: false

            });
        }
        //jquery database to show data in grid
        var TableDatatablesButtons = function () {



            var initTable2 = function () {
                var table = $('#sample_2');

                var oTable = table.dataTable({


                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from _MAX_ total entries)",
                        "lengthMenu": "_MENU_ entries",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    searching: false,
                    // Or you can use remote translation file
                    //"language": {
                    //   url: '//cdn.datatables.net/plug-ins/3cfcc339e89/i18n/Portuguese.json'
                    //},
					"columnDefs": [{ "className": "dt-center", "targets": [0, 10] },],

                    buttons: [

                    ],

					"order": [[0, "desc"]],

                    "lengthMenu": [
                        [5, 10, 15, 20, -1],
                        [5, 10, 15, 20, "All"] // change per page values here
					],
			
					"createdRow": function (row, data, dataIndex) {
						if (data.length >0) {
							$(row).find('td:eq(0)').css('font-size:20px');
						}
						
					},
                    // set the initial value
                    "pageLength": 20,

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", // horizobtal scrollable datatable

                });
            }



            return {

                //main function to initiate the module
                init: function () {

                    if (!jQuery().dataTable) {
                        return;
                    }

                    initTable2();
                }

            };

        }();
	</script>


}

