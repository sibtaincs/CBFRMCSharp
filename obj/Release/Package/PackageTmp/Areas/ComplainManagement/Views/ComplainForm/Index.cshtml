@model CBFRM.Areas.ComplainManagement.Models.UserViewModel
@{
	ViewBag.Title = "Complain Form";
	Layout = "~/Views/Shared/_Layout.cshtml";


	int ComID = 0;
	string ctrID = "";
	string fsCode = "";
	string SD = "";
	string UUser = "";
	string Recdt = "";
	bool IMCStaffFlag = true;
	string RecByEDWPName = "";
	int RecByEDWPID = 0;
	string RByNonIMCName = "";
	string ETimestamp = "";
	int CCMCBC = 0;
	string Province = "";
	string DistrictText = "";
	string OCMCBC = "";
	string LocationText = "";
	string CommunityText = "";
	string ProID = "";
	int   FacID = 0;
	string FSC = "";
	string FSCOtherSectorText = "";
	string OtherVulnerabilityText = "";
	int VulID = 0;
	string subj = "";
	string ComplaintDescription = "";
	int EDWComplaintantID = 0;
	int Age = 0;
	string SexCodee = "";
	string LDCode = "";
	string OtherLDCode = "";
	string PName = "";
	string Phone = "";
	string Email = "";
	string Address = "";
	string RelationToProgram = "";
	string OCAvenueText = "";
	int ClassfiID = 0;
	int catID = -1;
	string ACDate = "";
	int ACM = 0;
	int ACKByEDWPID = 0;
	string ACKEDWPName = "";
	string ACkOCMT = "";
	string NoackDesc = "";
	int RefLevel = 0;
	int REFCountryEDWPID = 0;
	string REFCountryEDWName = "";
	int CMHQ = 0;
	string HQDate = "";
	string HQOCCM = "";
	string NoRRD = "";
	string IDateofreferral = "";
	string IComments = "";
	int FIRSTRESPEDWPID = 0;
	string FIRSTRESPEDWName = "";
	string NonIMCName = "";
	string HQDisclosure = "";
	string ReferralAgency = "";
	string ExtPersonName = "";
	string PersonPositionText = "";
	string RefDate = "";
	string ExtComment = "";
	string InvDes = "";
	string Corrective = "";
	string POCN = "";
	string ResDate = "";
	string RepDate = "";
	int RepCMID = 0;
	string RepOtherComm = "";
	string NoRepDesc = "";
	int APPRESPEDWPID = 0;
	string APPRESPEDWName = "";
	string RAppealDate = "";
	int RAppealCMID = 0;
	string RAppealOCC = "";
	string AppDate = null;
	int AppCMID = 0;
	string AppOCMtext = "";
	string ProceDes = "";
	string AResolutionDate = "";
	string ApResolutionDes = "";
	string ClosureDate = "";
	string closedby = "";
	int closedbypersonID = 0;





	bool AddressedFlag = false;
	bool ProcessExplainedFlag = false;
	bool TimelineDiscussedFlag = false;
	bool ExplainedFlag = false;
	bool FollowUpFlag = false;
	string ddlenabledisable = "";
	string ddlenabledisablefsc = "";
	string otherlanguagestyle = "display:none";
	string ResponseAppealStyle = "display:none";
	string AppealTabHide = "";
	string AppealStyle = "";



	string RDOCMstyle = "display:none";

	if (Model.spEditCBS.Count > 0)
	{
		ComID = Convert.ToInt32(Model.spEditCBS[0].CommunityBasedComplaintID);
		ctrID = Convert.ToString(Model.spEditCBS[0].CountryCode);

		if (ctrID != null)
		{
			ddlenabledisable = "disabled";


		}


		fsCode = Convert.ToString(Model.spEditCBS[0].FieldSiteCode);
		if (fsCode != null)
		{
			ddlenabledisablefsc = "disabled";


		}
		SD = Convert.ToString(Model.spEditCBS[0].SubmitDate);
		UUser = Convert.ToString(Model.spEditCBS[0].UpdateUser);
		Recdt = Convert.ToString(Model.spEditCBS[0].ReceivedDate);
		IMCStaffFlag = Convert.ToBoolean(Model.spEditCBS[0].ReceivedByIMCStaffFlag);
		RecByEDWPID = Convert.ToInt32(Model.spEditCBS[0].ReceivedByEDWPersonID);
		RecByEDWPName = Convert.ToString(Model.spEditCBS[0].FullName);
		RByNonIMCName = Convert.ToString(Model.spEditCBS[0].ReceivedByNonIMCName);
		ETimestamp = Convert.ToString(Model.spEditCBS[0].EnteredTimestamp);
		CCMCBC = Convert.ToInt32(Model.spEditCBS[0].ComplaintCommunicationMethodID);
		ProID = Convert.ToString(Model.spEditCBS[0].ProjectIdentifier);
		FacID = Convert.ToInt32(Model.spEditCBS[0].FacilityID);
		subj = Convert.ToString(Model.spEditCBS[0].SubjectText);
		ComplaintDescription = Convert.ToString(Model.spEditCBS[0].ComplaintDescription);
		ClassfiID = Convert.ToInt32(Model.spEditCBS[0].ComplaintClassificationID);
		//catID = Convert.ToInt32(Model.spEditCBS[0].ComplaintCategoryID);
		if (Model.spEditCBS[0].ComplaintCategoryID == null)
		{

			catID = -1;

		}
		else
		{
			catID = Convert.ToInt32(Model.spEditCBS[0].ComplaintCategoryID);
		}

		NoackDesc = Convert.ToString(Model.spEditCBS[0].NoAcknowledgementReasonDescription);
		RefLevel = Convert.ToInt32(Model.spEditCBS[0].InternalReferralLevelID);
		NoRRD = Convert.ToString(Model.spEditCBS[0].NoReferralReasonDescription);
		NoRepDesc = Convert.ToString(Model.spEditCBS[0].NoResponseReasonDescription);
		ClosureDate = Convert.ToString(Model.spEditCBS[0].ClosedDate);

		if (ClosureDate == null)
		{
			ClosureDate = null;
			AppealTabHide = "";
			AppealStyle = "cursor: no-drop";
		}
		else
		{
			AppealTabHide = "tab";
			AppealStyle = "";



		}
		closedbypersonID = Convert.ToInt32(Model.spEditCBS[0].ClosedByEDWPersonID);
		closedby = Convert.ToString(Model.spEditCBS[0].ClosedbyPerson);
		NonIMCName = Convert.ToString(Model.spEditCBS[0].ResponseByNonIMCName);
	}
	if (Model.GetFacilityDetails.Count > 0)
	{
		Province = Convert.ToString(Model.GetFacilityDetails[0].AdminOneName);
		DistrictText = Convert.ToString(Model.GetFacilityDetails[0].AdminTwoName);
		//LocationText = Convert.ToString(Model.spEditlocation[0].LocationText);
		CommunityText = Convert.ToString(Model.GetFacilityDetails[0].CityAdminName);
	}

	if (Model.spEditVulnerability.Count > 0)
	{
		VulID = Convert.ToInt32(Model.spEditVulnerability[0].VulnerabilityTypeID);
	}

	if (Model.spEditComplainDetails.Count > 0)
	{
		EDWComplaintantID = Convert.ToInt32(Model.spEditComplainDetails[0].EDWComplainantID);
		Age = Convert.ToInt32(Model.spEditComplainDetails[0].AgeYearNumber);
		SexCodee = Convert.ToString(Model.spEditComplainDetails[0].SexCode);
		LDCode = Convert.ToString(Model.spEditComplainDetails[0].PrimaryLanguageDialectCode);
		OtherLDCode = Convert.ToString(Model.spEditComplainDetails[0].OtherLanguageDialectText);

		if (OtherLDCode != null)
		{
			otherlanguagestyle = "display:block";
		}
		else
		{
			otherlanguagestyle = "display:none";
		}
		PName = Convert.ToString(Model.spEditComplainDetails[0].PersonName);
		Phone = Convert.ToString(Model.spEditComplainDetails[0].PhoneNumber);
		Email = Convert.ToString(Model.spEditComplainDetails[0].EmailAddress);
		Address = Convert.ToString(Model.spEditComplainDetails[0].AddressText);
		RelationToProgram = Convert.ToString(Model.spEditComplainDetails[0].ComplainantProgramRelationshipText);
		OCAvenueText = Convert.ToString(Model.spEditComplainDetails[0].OtherCommunicationAvenueText);
		AddressedFlag = Convert.ToBoolean(Model.spEditComplainDetails[0].ComplainantQuestionsAddressedFlag);
		ProcessExplainedFlag = Convert.ToBoolean(Model.spEditComplainDetails[0].HandlingProcessExplainedFlag);
		TimelineDiscussedFlag = Convert.ToBoolean(Model.spEditComplainDetails[0].ProcessTimelineDiscussedFlag);
		ExplainedFlag = Convert.ToBoolean(Model.spEditComplainDetails[0].ResponseReceivalExplainedFlag);
		FollowUpFlag = Convert.ToBoolean(Model.spEditComplainDetails[0].FollowUpContactDetailsFlag);

	}

	if (Model.spEditComplaintCommunicationAck.Count > 0)
	{

		ACDate = Convert.ToString(Model.spEditComplaintCommunicationAck[0].CommunicationDate);
		if (ACDate == "01/01/0001")
		{
			ACDate = null;


		}
		ACM = Convert.ToInt32(Model.spEditComplaintCommunicationAck[0].CommunicationMethodID);
		ACKByEDWPID = Convert.ToInt32(Model.spEditComplaintCommunicationAck[0].EDWPersonID);
		ACKEDWPName = Convert.ToString(Model.spEditComplaintCommunicationAck[0].FullName);
		ACkOCMT = Convert.ToString(Model.spEditComplaintCommunicationAck[0].OtherComplaintCommunicationMethodText);


	}
	if (Model.spEditComplaintCommunication.Count > 0)
	{
		REFCountryEDWPID = Convert.ToInt32(Model.spEditComplaintCommunication[0].EDWPersonID);
		REFCountryEDWName = Convert.ToString(Model.spEditComplaintCommunication[0].FullName);
		IDateofreferral = Convert.ToString(Model.spEditComplaintCommunication[0].CommunicationDate);

		if (IDateofreferral == "01/01/0001")
		{
			IDateofreferral = null;


		}
		IComments = Convert.ToString(Model.spEditComplaintCommunication[0].Comment);

	}

	if (Model.spEditComplaintCommunicationHQ.Count > 0)
	{

		CMHQ = Convert.ToInt32(Model.spEditComplaintCommunicationHQ[0].CommunicationMethodID);
		HQDate = Convert.ToString(Model.spEditComplaintCommunicationHQ[0].CommunicationDate);

		if (HQDate == "01/01/0001")
		{
			HQDate = null;
		}
		HQOCCM = Convert.ToString(Model.spEditComplaintCommunicationHQ[0].OtherComplaintCommunicationMethodText);

	}

	if (Model.spEditComplaintCommunicationFR.Count > 0)
	{

		FIRSTRESPEDWPID = Convert.ToInt32(Model.spEditComplaintCommunicationFR[0].EDWPersonID);
		FIRSTRESPEDWName = Convert.ToString(Model.spEditComplaintCommunicationFR[0].FullName);
		RepDate = Convert.ToString(Model.spEditComplaintCommunicationFR[0].CommunicationDate);
		if (RepDate == "01/01/0001")
		{
			RepDate = null;
		}
		RepCMID = Convert.ToInt32(Model.spEditComplaintCommunicationFR[0].CommunicationMethodID);
		RepOtherComm = Convert.ToString(Model.spEditComplaintCommunicationFR[0].OtherComplaintCommunicationMethodText);


		if (RepOtherComm == null)
		{
			RDOCMstyle = "display:none";
		}
		else
		{
			RDOCMstyle = "display:block";
		}

	}

	if (Model.spEditComplaintCommunicationAR.Count > 0)
	{
		APPRESPEDWPID = Convert.ToInt32(Model.spEditComplaintCommunicationAR[0].EDWPersonID);
		APPRESPEDWName = Convert.ToString(Model.spEditComplaintCommunicationAR[0].FullName);
		RAppealDate = Convert.ToString(Model.spEditComplaintCommunicationAR[0].CommunicationDate);
		if (RAppealDate == "01/01/0001")
		{
			RAppealDate = null;
		}
		RAppealCMID = Convert.ToInt32(Model.spEditComplaintCommunicationAR[0].CommunicationMethodID);
		RAppealOCC = Convert.ToString(Model.spEditComplaintCommunicationAR[0].OtherComplaintCommunicationMethodText);

	}

	if (Model.spEditExternal.Count > 0)
	{

		HQDisclosure = Convert.ToString(Model.spEditExternal[0].HQDisclosureAuthorizationText);
		ReferralAgency = Convert.ToString(Model.spEditExternal[0].ReferralAgencyName);
		ExtPersonName = Convert.ToString(Model.spEditExternal[0].ReferralPersonName);
		PersonPositionText = Convert.ToString(Model.spEditExternal[0].ReferralPersonPositionText);
		RefDate = Convert.ToString(Model.spEditExternal[0].ReferralDate);
		if (RefDate == "01/01/0001")
		{
			RefDate = null;


		}
		ExtComment = Convert.ToString(Model.spEditExternal[0].ContactComment);
	}
	if (Model.spEditResolution.Count > 0)
	{
		InvDes = Convert.ToString(Model.spEditResolution[0].InvestigationDescription);
		Corrective = Convert.ToString(Model.spEditResolution[0].CorrectiveActionDescription);
		POCN = Convert.ToString(Model.spEditResolution[0].InvestigationPointOfContactName);
		ResDate = Convert.ToString(Model.spEditResolution[0].ResolutionDate);

		if (ResDate == "01/01/0001")
		{
			ResDate = null;
		}



	}
	if (Model.spEditComplaintAppeal.Count > 0)
	{
		AppDate = Convert.ToString(Model.spEditComplaintAppeal[0].AppealDate);
		AppCMID = Convert.ToInt32(Model.spEditComplaintAppeal[0].AppealReceivedCommunicationMethodID);
		AppOCMtext = Convert.ToString(Model.spEditComplaintAppeal[0].OtherComplaintCommunicationMethodText);
		ProceDes = Convert.ToString(Model.spEditComplaintAppeal[0].ProcessDescription);
		AResolutionDate = Convert.ToString(Model.spEditComplaintAppeal[0].AppealResolutionDate);
		ApResolutionDes = Convert.ToString(Model.spEditComplaintAppeal[0].AppealResolutionDescription);

		if (AppDate == "01/01/0001")
		{
			AppDate = null;


		}

		if (AResolutionDate == "01/01/0001")
		{
			AResolutionDate = null;
		}


	}


}



@section styles{

	@Styles.Render("~/Content/DataTable/css")
	<!-- Styles -->

	<link href="~/Content/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Content/assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" />
	<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/css/bootstrap-datepicker.css" rel="stylesheet" />
	<link href="~/Content/assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Content/assets/global/plugins/select2/css/select2.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Content/assets/global/plugins/select2/css/select2-bootstrap.min.css" rel="stylesheet" type="text/css" />
	<link href="~/Content/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css" rel="stylesheet" />
	<link href="~/Content/application.css" rel="stylesheet" />

}

    <style>
	.autosearchclass {
		width: 415px;
	}

        @@media (max-width: 1366px) {

            .btn {
                font-size: 1em;
                padding: 4px 6px;
            }
        }
	@@media (min-width: 1367px) {
		
        .btn {
            font-size: 1.1em;
            padding: 7px 14px;
        }
	}
        @@media (min-width: 1281px) {
            .autosearchclass {
                width: 415px;
            }

           
        }
	@@media (min-width: 1025px) and (max-width: 1280px) {
		.autosearchclass {
			width: 415px;
		}
        
	}

	@@media (min-width: 768px) and (max-width: 1024px) {
		.autosearchclass {
			width: 400px;
		}
        
	}

	@@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
		.autosearchclass {
			width: 400px;
		}
      
	}

	@@media (min-width: 481px) and (max-width: 767px) {
		.autosearchclass {
			width: 250px;
		}
        
	}

	@@media (min-width: 320px) and (max-width: 480px) {
		.autosearchclass {
			width: 200px;
		}
       
	}

	.tooltip-inner {
		background: #f3f8f1 !important;
		color: black !important;
		font-size: 12px !important;
		/*border: 2px solid;*/
		text-align: initial !important;
		width: 200px !important;
	}

	.portlet.box {
		background-color: transparent;
		margin-top: 20px;
		border-radius: 30px !important;
	}

	.note.note-default {
		background-color: #1C3FAA !important;
		border-color: #1C3FAA !important;
	}

	.portlet.box > .portlet-title {
		background-color: #337ab7 !important;
		border-top-left-radius: 30px !important;
		border-top-right-radius: 30px !important;
		color: #FFFFFF !important;
	}

	.page-content {
		background-color: #1C3FAA !important;
	}

	.portlet.box > .portlet-body {
		border-bottom-left-radius: 30px !important;
		border-bottom-right-radius: 30px !important;
		padding: 15px;
	}

	.btn-primary {
		color: #fff;
		background-color: #337ab7;
		border-color: #337ab7;
	}

	.form-group.form-md-line-input.form-md-floating-label .form-control ~ label {
		font-size: 11px !important;
	}
    </style>

<form role="form" id="CBFValidation" action="#">
	<div class="page-container">
		<div class="page-content-wrapper">
			<!-- BEGIN CONTENT BODY -->
			<div class="page-content">

				<div class="portlet box">
					<div class="portlet-title" style="border-top-left-radius: 30px !important; border-top-right-radius: 30px !important;">
						<div class="caption" style="font-size: 18px; font-weight:bold;font-family:Calibri">
							<i class=""></i>Feedback and Complaint From 
						</div>
						<div class="tools"> </div>
					</div>

					<div class="portlet-body" style="font-weight:bold">
						<div class="row">
							<div class="col-md-3">
								<div class="form-group form-md-line-input form-md-floating-label has-success">
									<input id="txtCommunityBasedComplaintID" disabled name="CommunityBasedComplaintID" class="form-control" type="text" value="@ComID" title="Complain Number" />
                                    <label for="txtCommunityBasedComplaintID">Reference ID #</label>
								</div>
							</div>

							<div class="col-md-5">

								<input type="number" id="lblEDWComplaintantID" name="EDWComplaintantID" hidden value="@EDWComplaintantID" />
								<div class="form-group form-md-line-input form-md-floating-label has-success">

									<select @ddlenabledisable class="form-control tip-top color red" id="dllCountry" name="CountryCode" data-toggle="tooltip">

										<option value=""></option>
										@foreach (var item in Model.spGetCountry.OrderBy(x => x.CountryName))
										{

											if (item.CountryCode == ctrID)
											{
												<option value="@item.CountryCode" selected>@item.CountryName</option>
											}
											else
											{
												<option value="@item.CountryCode"> @item.CountryName </option>
											}
										}

									</select>
									<label for="dllCountry">Country</label>
								</div>
							</div>
							<div class="col-md-4">

								<div class="form-group form-md-line-input form-md-floating-label has-success">
									<select @ddlenabledisablefsc class="form-control" id="dllFieldSite" name="FieldSiteCode">
										<option value=""></option>

										@foreach (var item in Model.GetFieldSiteByCountryCodeUserID.OrderBy(x => x.CountryCode))
										{
											if (item.FieldSiteCode == fsCode)
											{
												<option value="@item.FieldSiteCode" selected>@item.FieldSiteName</option>
											}
											else
											{
												<option value="@item.FieldSiteCode"> @item.FieldSiteName </option>
											}
										}
									</select>
									<label for="dllFieldSite">Field Site Name</label>

								</div>
							</div>
						</div>
						<div class="row" style="display:none" id="main">
							<div class="col-md-3 col-sm-3 col-xs-3">
								<ul class="nav nav-tabs tabs-left" id="tabstrip">
									<li class="active">
										<a href="#tab_6_1" data-toggle="tab">Complaint Details</a>
									</li>
									<li>
										<a href="#tab_6_2" data-toggle="tab">Acknowledgment</a>
									</li>
									<li>
										<a href="#tab_6_3" data-toggle="tab">Referral </a>
									</li>
									<li>
										<a href="#tab_6_4" data-toggle="tab">Resolution</a>
									</li>
									<li>
										<a href="#tab_6_5" data-toggle="tab" title="Response-communicating resolution back to the complainant or feedback provider">Response to Complainant</a>
									</li>
									<li>
										<a href="#tab_6_6" id="appealTab" style="@AppealStyle" data-toggle="@AppealTabHide" title="Appeal will enable after closure">Appeal</a>
									</li>
									<li>
										<a href="#tab_6_7" data-toggle="tab">Closure</a>
									</li>
								</ul>
							</div>
							<br />
							<div class="col-md-9 col-sm-9 col-xs-9">
								<div class="tab-content">

									@{
										string RO = "";
										string PrivateField = "";

										if (ComID == 0)
										{
											RO = "enabled";
										}
										else
										{
											if (Model.spGetRoles.Count > 0)
											{

												foreach (var attr in Model.spGetRoles)
												{
													string countrycode = "All";
													string fieldsitename = "All";

													if (attr.CountryCode != "All")
													{
														countrycode = ctrID;
													}

													if (attr.FieldSiteName != "All")
													{
														fieldsitename = fsCode;
													}

													RO = "disabled";
													PrivateField = "display:none";
													if (attr.CountryCode == countrycode && attr.ReadAccessLevel == "Full" && attr.FieldSiteName == fieldsitename)
													{
														RO = "enabled";
														PrivateField = "display:block";


														break;
													}

												}

											}
										}
									}

									<div class="tab-pane active" id="tab_6_1">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption"  style="font-family:Calibri">
													<i></i>Feedback/Complaint
												</div>
												<div class="tools">
													<a href="" class="collapse" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body form">
												<div class="form-body">
													<div class="row">
														<div class="col-md-4">

															<div class="form-group">
																<label style="color:#999; font-size: 13px">Date of Entry :</label>
																<label style="color:#999;font-weight: 600" id="lblSubmitDate" name="SubmitDate">@SD</label>

															</div>
														</div>
														<!--/span-->
														<div class="col-md-4">

															<!--/span-->
														</div>

														<div class="col-md-4">

															<div class="form-group">
																<label style="color:#999; font-size: 13px">Logged By:</label>
																<label style="color:#999;font-weight: 600" id="lblEnteredByEDWPersonID" name="EnteredByEDWPersonID">@UUser</label>


															</div>

														</div>

													</div>
													<ul class="nav nav-tabs nav-tabs-line nav-tabs-inverse Bold"></ul>
													<div class="row">
														<div class="col-md-3">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<div class="input-icon">
																	<i class="fa fa-calendar"></i>
																	<input id="txtReceivedDate" value="@Recdt" data-date-format="dd/mm/yyyy" @RO name="ReceivedDate" data-date-end-date="+0d" class="form-control  datepicker" size="16" type="text" />
																	<label for="txtReceivedDate"> <span style="color:red;font-size:12px">*</span> Date Complaint was received</label>
																</div>

															</div>
														</div>
														<div class="col-md-1">
															@{
																string IMCStaffFlagStyle = "display:block";
																string ReciviedByDetailsstyle = "display:none";

																if (EDWComplaintantID == 0)
																{
																	IMCStaffFlag = true;

																}

																if (IMCStaffFlag == false)
																{
																	IMCStaffFlagStyle = "display:none";
																	ReciviedByDetailsstyle = "display:block";

																}
															}
															<label class="customlablecheck" onclick="myFunction()" style="margin-top: 15px;">
																<input type="checkbox" checked="@IMCStaffFlag" id="chkReceivedByIMCStaffFlag" @RO title="Un Check For Non IMC Staff Name" name="ReceivedByIMCStaffFlag">&nbsp;IMC Staff
															</label>
														</div>
														<div class="col-md-5" id="ReciviedByDetails" style="@IMCStaffFlagStyle">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<div class="input-icon">
																	<i class="fa fa-user"></i>
																	<input placeholder="Received by" value="@RecByEDWPName" id="txtReceivedByEDWPersonID" @RO title="If received directly through person to person mechanism, e.g. staff directly approached by community member,committee, community meeting, phone, SMS" name="ReceivedByEDWPersonID" class="form-control" style="width:405px" />


																</div>

																<input id="lblrecivedbyID" name="ReceivedByEDWPersonID" class="form-control" type="hidden" value="@RecByEDWPID" />
															</div>
														</div>

														<div class="col-md-5" id="RecivedByNonIMCDetails" style="@ReciviedByDetailsstyle">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<div class="input-icon">
																	<i class="fa fa-user"></i>
																	<input id="txtReceivedByNonIMCName" name="ReceivedByNonIMCName" maxlength="80" @RO class="form-control" type="text" value="@RByNonIMCName" style="width:405px" />
																	<label for="txtReceivedByNonIMCName" style=" font-size: 11px !important;">Received By Non IMC Name</label>
																</div>
															</div>


														</div>
														<div class="col-md-3">


															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<div class="input-icon">
																	<i class="fa fa-calendar"></i>
																	<input id="txtDateComplainwasRaised" value="@ETimestamp" data-date-format="dd/mm/yyyy" @RO name="EnteredTimestamp" data-date-end-date="-0d" class="form-control  datepicker tip-top color red" size="16" type="text" data-toggle="tooltip" title="Date feedback/complaint was raised (if different from date received)" />
																	<label for="txtDateComplainwasRaised"><span style="color:red;font-size:12px">*</span>Date Complaint was raised</label>
																</div>
															</div>
														</div>

													</div>
													<div class="row">
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<select class="form-control tip-top color red" id="dllComplaintCommunicationMethodID" @RO name="ComplaintCommunicationMethodID" data-toggle="tooltip" title="How feedback complaint was received">
																	<option value=""></option>
																	@foreach (var item in Model.spGetCommunicationMethod.OrderBy(x => x.SubmittalDisplaySequenceNumber))
																	{
																		if (item.CommunicationMethodID == CCMCBC)
																		{
																			<option value=@item.CommunicationMethodID selected>@item.CommunicationMethodName</option>
																		}
																		else
																		{
																			<option value=@item.CommunicationMethodID> @item.CommunicationMethodName </option>
																		}
																	}
																</select>
																<label for="dllComplaintCommunicationMethodID">Feedback/Complaint Channel</label>
															</div>
														</div>
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<select class="form-control" id="dllFacility" name="FacilityName" @RO>
																	<option value=""></option>

																	@foreach (var item in Model.spGetFacilityCountryCode.OrderBy(x => x.FacilityName))
																	{
																		if (item.FacilityID == FacID)
																		{
																			<option value="@item.FacilityID" selected>@item.FacilityName</option>
																		}
																		else
																		{
																			<option value="@item.FacilityID"> @item.FacilityName </option>
																		}
																	}

																</select>
																<label for="dllFacility"><span style="color:red;font-size:12px">*</span>Location/camp/facility</label>
															</div>
															@*<div class="form-group form-md-line-input form-md-floating-label has-success">
					<input id="txtLocationText" maxlength="80" text" class="form-control" value="" @RO name="LocationText" />
					<label for="txtLocationText">Location/camp/facility</label>
				</div>*@
														</div>
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">

																<input id="txtProvinceText" maxlength="80" class="form-control" value="@Province" readonly name="ProvinceText" />
																<label for="txtProvinceText">Governorate/Province/State</label>
															</div>
														</div>
													</div>
													<div class="row" id="OtherComplaintCommunicationMethodTextDetails" style="display:none">
														<div class="col-md-12">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtOtherComplaintCommunicationMethodText" type="text" maxlength="80" class="form-control" @RO value="@OCMCBC" name="OtherComplaintCommunicationMethodText" />
																<label for="txtOtherComplaintCommunicationMethodText ">Other Complaint Communication Method</label>
															</div>
														</div>
													</div>
													<div class="row">
														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtDistrictText" maxlength="80" class="form-control" value="@DistrictText" readonly name="DistrictText" />
																<label for="txtDistrictText">District</label>
															</div>

														</div>
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtCommunityText" maxlength="80" text" class="form-control" value="@CommunityText" readonly name="CommunityText" />
																<label for="txtCommunityText">Village/community</label>
															</div>

														</div>

														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<select class="form-control" id="ddlProjectIdentifier" name="ProjectIdentifier" @RO>
																	<option value=""></option>

																	@foreach (var item in Model.spGetvProjectByID.OrderBy(x => x.DropDownDisplay))
																	{
																		if (item.ProjectIdentifier == ProID)
																		{
																			<option value="@item.ProjectIdentifier" selected>@item.DropDownDisplay</option>
																		}
																		else
																		{
																			<option value="@item.ProjectIdentifier"> @item.DropDownDisplay </option>
																		}
																	}

																</select>
																<label for="ddlProjectIdentifier">Grant Code</label>
															</div>

														</div>
													</div>
													<div class="row">
														<div class="col-md-12">
															<div class="form-group ">
																<label style="color:#999">
																	Sector/Program
																</label>
																<select id="dllFieldSectorCode" name="FieldSectorCode" class="form-control select2" @RO multiple data-label="left" data-select-all="true" data-width="100%" data-filter="true" data-action-onchange="true">

																	@foreach (var item in Model.spGetFieldSector.OrderBy(x => x.DisplaySequenceNumber))
																	{
																		bool selected;
																		selected = false;


																		if (Model.spEditFieldSector.Count > 0)
																		{
																			foreach (var scid in Model.spEditFieldSector)
																			{
																				if (scid.FieldSectorCode == item.FieldSectorCode)
																				{
																					<option value="@item.FieldSectorCode" selected>@item.FieldSectorName</option>
																					selected = true;
																					break;
																				}
																			}
																		}

																		if (selected == false)
																		{

																			<option value="@item.FieldSectorCode">@item.FieldSectorName</option>
																		}

																	}

																</select>
															</div>

														</div>
													</div>

													@{
														string OtherSectorProgramStyle = "display:none";
														if (Model.spEditFieldSector.Count > 0)
														{

															FSCOtherSectorText = Convert.ToString(Model.spEditFieldSector[0].OtherSectorText);

															if (FSCOtherSectorText == null || FSCOtherSectorText == "")
															{
																OtherSectorProgramStyle = "display:none";
															}
															else
															{
																OtherSectorProgramStyle = "display:block";

															}
														}
													}
													<div class="row" id="OtherSectorProgram" style="@OtherSectorProgramStyle">
														<div class="col-md-12">
															@if (Model.spEditFieldSector.Count > 0)
															{

																FSCOtherSectorText = Convert.ToString(Model.spEditFieldSector[0].OtherSectorText);
															}
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtOtherSectorProgram" type="text" maxlength="80" class="form-control" @RO value="@FSCOtherSectorText" name="OtherSectorProgram" />
																<label for="txtOtherSectorProgram">Other Sector/Program</label>

																<span id="remainSectorProg" class="ClassRemaing pull-right">80 </span>
																<span class="ClassRemaing pull-right">characters remaining &nbsp;&nbsp;</span>
															</div>
														</div>
													</div>
													<div class="row">
														<div class="col-md-12">
															<div class="form-group">
																<label style="color:#999">
																	Vulnerability type
																</label>

																<select id="ddlVulnerabilityTypeID" name="VulnerabilityTypeID" class="form-control select2" @RO multiple data-label="left" data-select-all="true" data-width="100%" data-filter="true" data-action-onchange="true">

																	@*multi check dropdown code*@


																	@foreach (var item in Model.spGetVulnerabilityType.OrderBy(x => x.DisplaySequenceNumber))
																	{
																		bool selected;
																		selected = false;

																		if (Model.spEditVulnerability.Count > 0)
																		{
																			foreach (var scid in Model.spEditVulnerability)
																			{
																				if (scid.VulnerabilityTypeID == item.VulnerabilityTypeID)
																				{
																					<option value=@item.VulnerabilityTypeID selected>@item.VulnerabilityTypeName</option>
																					selected = true;
																					break;
																				}
																			}
																		}

																		if (selected == false)
																		{

																			<option value=@item.VulnerabilityTypeID>@item.VulnerabilityTypeName</option>
																		}

																	}


																</select>

															</div>

														</div>

													</div>

													@{
														string OtherVulnerablityStyle = "display:none";
														if (Model.spEditCBS.Count > 0)
														{

															OtherVulnerabilityText = Convert.ToString(Model.spEditCBS[0].OtherVulnerabilityText);

															if (OtherVulnerabilityText == null || OtherVulnerabilityText == "")
															{
																OtherVulnerablityStyle = "display:none";
															}
															else
															{
																OtherVulnerablityStyle = "display:block";

															}
														}
													}

													<div class="row" id="OtherVulnerablity" style="@OtherVulnerablityStyle">
														<div class="col-md-12">
														
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtOtherVulnerabilityText" type="text" maxlength="80" class="form-control" @RO value="@OtherVulnerabilityText" name="OtherVulnerabilityText" />
																<label for="txtOtherVulnerabilityText">Othe Vulnerability</label>
																
															</div>
														</div>
													</div>
													<div class="row">

														<div class="col-md-12">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<textarea id="txtComplaintDescription" maxlength="250" class="form-control" @RO name="ComplaintDescription" title="Describe the complaint or feedback raised with as much detail as possible. Do not include personal identifiers such as names or phone numbers, instead use the following PII field to record these details">@ComplaintDescription</textarea>

																<label for="txtComplaintDescription">Description <span style="color:red;font-size:x-small">( Do  not record any personally identifiable details here)</span></label>


																<span id="RemComplaintDescription" class="ClassRemaing pull-right" title="characters remaining">  250 </span>
																<span class="ClassRemaing pull-right">characters remaining &nbsp;&nbsp;</span>
																@*<span class="ClassRemaing pull-left">

						<span style="color:red;font-size:x-small">Note: do not record any personnaly identifiable information (PII) in the description,instead, record these details  the "Subject of complaint/ Witness/ Victim (if other than complainant)" field </span>
					</span>*@
															</div>

														</div>
													</div>
													<div class="row" style="@PrivateField">
														<div class="col-md-12">

															<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">

																<input id="txtSubject" text" class="form-control " value="@subj" name="Subject" @RO title="Record any identifiable details which should remain confidential. This may include: person(s) responsible for grievance (subject of complaint), witness(es), victim(s), contact information, locations, positions/titles or any other details which could potentially disclose the identity of anyone involved in the complaint" />

																<label for="txtSubject"><span class="fa fa-lock form-control-feedback"></span>Subject of complaint / Witness/ Victim (if other than Complainant)</label>
																<span id="remainSubject" class="ClassRemaing pull-right">80</span>
																<span class="ClassRemaing pull-right">characters remaining &nbsp;&nbsp;</span>
															</div>
														</div>
													</div>
												</div>

											</div>
										</div>
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i ></i>Feedback Provider/Complainant Details
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">
												<div class="row">



													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input type="text" value="@Age" id="txtAgeYearNumber" name="AgeYearNumber" @RO class="form-control" onkeyup="if (/\D/g.test(this.value)) this.value = this.value.replace(/\D/g,'')" />
															<label for="txtAgeYearNumber">Age(in years)</label>

														</div>
													</div>
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<select class="form-control" id="ddlSexCode" name="SexCode" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetGender.OrderBy(x => x.SexName))
																{
																	if (item.SexCode == SexCodee)
																	{
																		<option value=@item.SexCode selected>@item.SexName</option>
																	}
																	else
																	{
																		<option value=@item.SexCode> @item.SexName </option>
																	}


																}
															</select>
															<label for="ddlSexCode">Gender</label>

														</div>
													</div>
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<select class="form-control " id="ddlLanguageName" name="LanguageDialectCode" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetLanguageDialect.OrderBy(x => x.DisplaySequenceNumber))
																{
																	if (item.LanguageDialectCode == LDCode)
																	{
																		<option value=@item.LanguageDialectCode.Trim() selected>@item.LanguageName</option>
																	}
																	else
																	{

																		<option value="@item.LanguageDialectCode.Trim()">@item.LanguageName</option>
																	}

																}
															</select>
															<label for="ddlLanguageName">Language understood</label>
														</div>
													</div>

												</div>
												<div class="row" id="OtherlanguagesDetails" style="@otherlanguagestyle">
													<div class="col-md-12">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtOtherLanguageDialectText" type="text" maxlength="80" class="form-control" @RO value="@OtherLDCode" name="OtherLanguageDialectText" />
															<label for="txtOtherLanguageDialectText ">Other language</label>
															<span id="remainVul" class="ClassRemaing pull-right">80</span>
															<span class="ClassRemaing pull-right">characters remaining &nbsp;&nbsp;</span>
														</div>
													</div>
												</div>
												<div class="row" style="@PrivateField">
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">
															<div class="input-icon">
																<i class="fa fa-user"></i>
																<input id="txtPersonName" type="text" maxlength="40" class="form-control" title="Name of person providing feedback or raising complaint" value="@PName" name="PersonName" @RO />
																<label for="txtPersonName"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Name</label>
															</div>
														</div>
													</div>
													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">
															<div class="input-icon">
																<i class="fa fa-bell-o"></i>
																<input id="txtPhoneNumber" onchange="HideContactDetails()" type="text" maxlength="20" class="form-control" value="@Phone" name="PhoneNumber" @RO onkeyup="if (/\D/g.test(this.value)) this.value = this.value.replace(/\D/g,'')" />

																<label for="txtPhoneNumber"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Phone Number </label>

															</div>
														</div>
													</div>
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">
															<div class="input-icon">
																<i class="fa fa-envelope"></i>
																<input id="txtEmailAddress" onchange="HideContactDetails()" type="email" maxlength="255" class="form-control" value="@Email" name="EmailAddress" @RO />
																<label for="txtEmailAddress"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Email</label>
															</div>
														</div>
													</div>
												</div>
												<div class="row" style="@PrivateField">

													<div class="col-md-12">

														<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">

															<textarea id="txtAddressText" onchange="HideContactDetails()" class="form-control" maxlength="400" name="AddressText" @RO>@Address</textarea>
															<label for="txtAddressText"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Address</label>
														</div>

													</div>



												</div>
												<div class="row" style="@PrivateField">
													<div class="col-md-6">


														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtComplainantProgramRelationshipText" maxlength="80" class="form-control" value="@RelationToProgram" @RO name="ComplainantProgramRelationshipText" />
															<label for="txtComplainantProgramRelationshipText"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Feedback Provider/Complainant's relation to program</label>
														</div>

													</div>
													<div class="col-md-6" style="@PrivateField">

														<div class="form-group form-md-line-input form-md-floating-label has-success" title="This is PII Field">
															<input id="txtOtherCommunicationAvenueText" onchange="HideContactDetails()" maxlength="80" class="form-control" value="@OCAvenueText" @RO name="OtherCommunicationAvenueText" title="This field is to record alternative means or instructions of how to communicate with complainant if phone, email, address were not adequate - e.g. spontaneous displacement camp, or safe area, etc." />
															<label for="txtOtherCommunicationAvenueText"><span class="fa fa-lock form-control-feedback" style="color:red;"></span>Other means of communication with complainant</label>
														</div>

													</div>

												</div>
												<div class="row" id="Canwecontact" style="display:none">
													<div class="col-md-6">

														<div class="form-group">
															<label style="color:#999">Can we contact the complainant?:</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
															<input type="checkbox" id="chkComplainantAllowContactFlag" checked="@Model.spEditComplainDetails[0].ComplainantAllowContactFlag" @RO name="ComplainantAllowContactFlag" class="make-switch pull-right" data-on-text="Yes" data-off-text="No">
														</div>

													</div>
													<div class="col-md-6">
														<div class="form-group">
															<label style="color:#999">Can we visit the complainant?:</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
															<input type="checkbox" id="chkComplainantAllowVisitFlag" checked="@Model.spEditComplainDetails[0].ComplainantAllowVisitFlag" @RO name="ComplainantAllowVisitFlag" class="make-switch" data-on-text="Yes" data-off-text="No" data-default-text-on="Yes">
														</div>

													</div>
												</div>
											</div>
										</div>
										<div class="portlet box blue-soft" style="@PrivateField">
											<div class="portlet-title">
												<div class="caption " style="font-family:Calibri">

													<i></i>
													<span class="caption-subject font-white bold">Add  Documents:</span><br />
													<span class="font-white" style="font-family:sans-serif ;font-size:small">
														Please note that:
														-The file size limit is 5 MB,
														-The following types are allowed: pdf, jpg, png, doc, docx, xls, xlsx, gif

													</span>
												</div>
											</div>
											<div class="portlet-body form">
												<div class="row">
													<div class="col-md-12">
														<!-- BEGIN PORTLET-->
														<div class="portlet light form-fit ">

															<div class="portlet-body form">
																<!-- BEGIN FORM-->
																@*<form action="#" class="form-horizontal form-bordered">*@
																<div class="form-body">

																	<div class="form-group">
																		@*<label class="control-label col-md-2 pull-left" style="color:#999">Add Files <span style="color:red;">  </span></label>*@
																		<div class="col-md-10">
																			<div class="fileinput fileinput-new" data-provides="fileinput">
																				<span class="btn yellow-crusta btn-file">
																					<span class="fileinput-new"> Select file <i class="fa fa-copy"></i> </span>

																					<input type="hidden"><input id="FileUpload" type="file" multiple name="..." @RO>
																				</span>

																			</div>
																		</div>
																	</div>

																	<div class="table-scrollable">
																		<script>var sr = 0;</script>
																		<table class="table table-striped table-bordered table-hover" id="TableFiles">
																			<thead>
																				<tr>
																					<th style="color:#999"> SR No </th>
																					<th style="color:#999"> File Name </th>
																					<th style="display:none">
																						Document Title
																						<span style="color:red;"> * </span>
																					</th>
																					<th style="display:none"> Remarks </th>
																					<th>  </th>
																					<th>  </th>
																					<th style="display:none"> Status </th>
																				</tr>
																			</thead>
																			<tbody>
																				@{
																					int docsr = 0;
																				}
																				@foreach (var item in Model.spGetCBCDcouments.Where(x => x.AppealDocumentFlag == false))
																				{
																					docsr++;
																					<tr>
																						<td>@docsr</td>
																						<td>@item.SupportingDocumentDescription</td>
																						<td style="display:none">@item.CommunityBasedComplaintID</td>
																						<td style="display:none">@item.CommunityBasedComplaintDocID</td>
																						<td><a download href="@item.DocumentHyperlink" class="btn btn-sm btn-primary"><i class='fa fa-download'></i>  Download </a></td>
																						<td> <button id='btnDelete' onclick='showMessageConfirmation(this,@item.CommunityBasedComplaintDocID)' type='button' class='btn btn-sm btn-danger' @RO> <i class='fa fa-trash'></i> Delete </button></td>
																						<td style="display:none">2</td>
																					</tr>
																				}
																			</tbody>
																		</table>
																		<script></script>
																	</div>

																	@*</form>*@
																	<!-- END FORM-->
																</div>
															</div>
															<!-- END PORTLET-->
														</div>
													</div>

												</div>
											</div>


										</div>
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i></i>Categorization of Feedback/Complaint
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>

											<div class="portlet-body">
												<div class="row">
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<select class="form-control" id="dllClassification" name="ComplaintClassificationID" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetClassification.OrderBy(x => x.DisplaySequenceNumber))
																{
																	if (item.ComplaintClassificationID == ClassfiID)
																	{
																		<option value=@item.ComplaintClassificationID selected>@item.ComplaintClassificationName</option>
																	}
																	else
																	{
																		<option value="@item.ComplaintClassificationID">@item.ComplaintClassificationName</option>
																	}
																}
															</select>
															<label for="dllClassification">Complaint Classification</label>

														</div>

													</div>
													<div class="col-md-1">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<a data-toggle="popover" data-trigger="hover" id="testbox2" class="btn btn-primary"><i class="fa fa-question Bold"></i></a>
															@*<input type="text" id="testbox" class="btn btn-primary disabled" style="width:30px"/>*@
														</div>
													</div>
													<div class="col-md-6">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<select class="form-control" id="ddlComplaintCategoryName" name="ComplaintCategoryID" @RO>
																<option value="-1"></option>

																@foreach (var item in Model.spGetCategories.OrderBy(x => x.ComplaintCategoryName))
																{
																	if (item.ComplaintCategoryID == catID)
																	{
																		<option value="@item.ComplaintCategoryID" selected>@item.ComplaintCategoryName</option>
																	}
																	else
																	{
																		<option value="@item.ComplaintCategoryID">@item.ComplaintCategoryName</option>
																	}
																}
															</select>
															<label for="ddlComplaintCategory">Category</label>

														</div>

													</div>

													<div class="col-md-1">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<a data-toggle="popover" data-trigger="hover" id="testbox" class="btn btn-primary"><i class="fa fa-question Bold"></i></a>
															@*<input type="text" id="testbox" class="btn btn-primary disabled" style="width:30px"/>*@
														</div>
													</div>

												</div>



											</div>
										</div>
									</div>
									<div class="tab-pane fade" id="tab_6_2">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i></i>Acknowledgment
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>
												</div>
											</div>
											<div class="portlet-body">
												<div class="row">
													<div class="col-md-4">
														<label style="color:#999">
															Acknowledgment Provided?
														</label>

													</div>
													<div class="col-md-4">
														<div class="form-group">
															<input type="checkbox" checked="@Model.spEditCBS[0].AcknowledgementProvidedFlag" @RO id="chkAcknowledgementProvidedFlag" name="AcknowledgementProvidedFlag" class="make-switch" data-on-text="Yes" data-off-text="No">
														</div>

													</div>

													@{
														string ackstyle = "display:none";
														string ackotherComstyle = "";
														string ackCommentIfNo = "display:block";
														if (Model.spEditCBS[0].AcknowledgementProvidedFlag == true)
														{
															ackstyle = "display:block";
															ackCommentIfNo = "display:none";
															ackCommentIfNo = "display:none";



														}
														if (Model.spEditCBS[0].ComplaintCommunicationMethodID == 43)
														{
															ackotherComstyle = "display:block";


														}
														else
														{
															ackotherComstyle = "display:none";
														}
													}
												</div>
												<div class="row" id="AcknowledgmentDetail1" style="@ackstyle">
													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<div class="input-icon">
																<i class="fa fa-calendar"></i>
																<input id="txtAcknowledgementProvidedDate" value="@ACDate" data-date-format="dd/mm/yyyy" @RO name="AcknowledgementProvidedDate" data-date-end-date="+0d" class="form-control datepicker" size="16" />
																<label for="txtAcknowledgementProvidedDate">Date acknowledgment sent</label>
															</div>
														</div>
													</div>
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<select class="form-control" id="ddlAcknowledgementCommunicationMethodID" name="AcknowledgementCommunicationMethodID" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetCommunicationMethodGeneral.OrderBy(x => x.GeneralDisplaySequenceNumber))
																{

																	if (item.CommunicationMethodID == ACM)
																	{
																		<option value=@item.CommunicationMethodID selected>@item.CommunicationMethodName</option>
																	}
																	else
																	{
																		<option value="@item.CommunicationMethodID">@item.CommunicationMethodName</option>
																	}


																}
															</select>
															<label for="ddlAcknowledgementCommunicationMethodID">Communicated Via</label>

														</div>

													</div>

													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<div class="input-icon">
																<i class="fa fa-user"></i>
																<input placeholder="Received by" value="@ACKEDWPName" id="txtAcknowledgeby" name="EDWPersonID" @RO class="form-control autosearchclass" type="text" />

																<input id="lblAcknowledgeby" name="EDWPersonID" class="form-control" type="hidden" value="@ACKByEDWPID" />
															</div>
														</div>
													</div>
												</div>
												<div class="row" id="OtherComplaintCommunicationMethodAck" style="@ackotherComstyle">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtOtherComplaintCommunicationMethodTextAck" class="form-control" value="@ACkOCMT" @RO name="OtherComplaintCommunicationMethodText" />
															<label for="txtOtherComplaintCommunicationMethodTextAck">Specify other method of acknowledging complaint</label>
														</div>
													</div>
												</div>
												<div class="row" id="AcknowledgmentDetail2" style="@ackstyle">
													<div class="col-md-8">
														<style>
															.customlablecheck {
																color: #999;
																font-size: 13px;
															}

															.customlablechecklist {
																font-weight: bold;
																color: #999;
															}

															.ClassRemaing {
																font-size: 08px;
																color: #999;
															}
														</style>
														<div class="form-group">
															<label class="customlablechecklist">Informed Consent Checklist<small>&nbsp;&nbsp;(Check each of these as they are completed for the complaint)</small></label>
															<div class="input-group">

																<div>
																	<label class="customlablecheck">
																	</label>
																	<br />
																	<label class="customlablecheck">
																		<input type="checkbox" checked="@ProcessExplainedFlag" id="chkHandlingProcessExplainedFlag" @RO name="HandlingProcessExplainedFlag">&nbsp;&nbsp;Explain complaint handling process (what happens next)
																	</label>
																	<br />
																	<label class="customlablecheck">
																		<input type="checkbox" checked="@TimelineDiscussedFlag" id="chkProcessTimelineDiscussedFlag" @RO name="ProcessTimelineDiscussedFlag">&nbsp;&nbsp;Discuss timeline (how long will the process take)
																	</label>
																	<br />
																	<label class="customlablecheck">
																		<input type="checkbox" checked="@ExplainedFlag" id="chkResponseReceivalExplainedFlag" @RO name="ResponseReceivalExplainedFlag">&nbsp;&nbsp;Explain how they will receive response
																	</label>
																	<br />

																	<label class="customlablecheck">
																		<input type="checkbox" checked="@FollowUpFlag" id="chkFollowUpContactDetailsFlag" @RO name="FollowUpContactDetailsFlag">&nbsp;&nbsp;Provide follow-up contact details (explain how they can contact IMC with additional details
																	</label>
																	<br />
																	<label class="customlablecheck">
																		<input type="checkbox" checked="@AddressedFlag" id="chkComplainantQuestionsAddressedFlag" @RO name="ComplainantQuestionsAddressedFlag">&nbsp;&nbsp;Allow for and address any questions from complainant
																	</label>
																</div>
															</div>
														</div>
													</div>
												</div>
												<div class="row" id="AcknowledgmentCommentsDetail" style="@ackCommentIfNo">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtNoAcknowledgementReasonDescription" type="text" class="form-control" value="@NoackDesc" @RO name="NoAcknowledgementReasonDescription" />
															<label for="txtNoAcknowledgementReasonDescription">Comments</label>
														</div>


													</div>
												</div>


											</div>
										</div>



									</div>
									<div class="tab-pane fade" id="tab_6_3">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i></i>Referral
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>

											<div class="portlet-body">
												<div class="row">
													<div class="col-md-4">
														<label style="color:#999">
															Referral Required?
														</label>

													</div>
													<div class="col-md-4">
														<div class="form-group">
															<input type="checkbox" checked="@Model.spEditCBS[0].ReferralRequiredFlag" id="chkReferralRequiredFlag" @RO name="ReferralRequiredFlag" class="make-switch" data-on-text="Yes" data-off-text="No">
														</div>

													</div>


												</div>
												@{
													string Externalralstyle = "display:none";
													string UserAssignedDetailsStyle = "display:none";
													string NodetailStyle = "display:block";
													string ReferralStaff = "display:none";
													string IRDetailStyle = "display:none";
													string IRDetailStyle1 = "display:none";
													string EthicsDetailsStyle = "display:none";
													string ED1 = "display:none";
													string ED2 = "display:none";
													if (@Model.spEditCBS[0].ReferralRequiredFlag == true)
													{
														NodetailStyle = "display:none";

														if (@Model.spEditCBS[0].ComplaintClassificationID == 20)
														{
															UserAssignedDetailsStyle = "display:block";
															if (@Model.spEditCBS[0].InternalReferralLevelID == 45)
															{
																ReferralStaff = "display:block";
																IRDetailStyle = "display:block";
																EthicsDetailsStyle = "display:none";
																IRDetailStyle1 = "display:block";
																ED1 = "display:none";
																ED2 = "display:none";
															}
															else if (@Model.spEditCBS[0].InternalReferralLevelID == 46)
															{
																UserAssignedDetailsStyle = "display:block";
																ReferralStaff = "display:none";
																IRDetailStyle = "display:none";
																EthicsDetailsStyle = "display:block";
																IRDetailStyle1 = "display:none";
																ED1 = "display:block";
																ED2 = "display:none";
															}
														}
														else if (@Model.spEditCBS[0].ComplaintClassificationID == 21)
														{
															Externalralstyle = "display:block";
															IRDetailStyle = "display:none";
															IRDetailStyle1 = "display:none";
															UserAssignedDetailsStyle = "display:none";
															NodetailStyle = "display:none";
															ReferralStaff = "display:none";
															EthicsDetailsStyle = "display:none";
														}

													}
													else
													{
														NodetailStyle = "display:block";
														Externalralstyle = "display:none";
														UserAssignedDetailsStyle = "display:none";
														ReferralStaff = "display:none";
														IRDetailStyle = "display:none";
														IRDetailStyle1 = "display:none";
														EthicsDetailsStyle = "display:none";
													}

												}
												<div class="row">
													<div class="col-md-6" id="UserAssignedDetails" style="@UserAssignedDetailsStyle">


														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<select class="form-control" id="dllReferralLevel" name="ReferralLevelID" @RO>
																@*<option value=""></option>*@
																@foreach (var item in Model.spGetReferrallevel.OrderBy(x => x.ReferralLevelName))
																{
																	if (item.ReferralLevelID == RefLevel)
																	{
																		<option value=@item.ReferralLevelID selected>@item.ReferralLevelName</option>
																	}
																	else
																	{
																		<option value="@item.ReferralLevelID">@item.ReferralLevelName</option>
																	}
																}

															</select>
															<label for="dllReferralLevel">
																Referral Level
															</label>
														</div>
													</div>
													<div class="col-md-6" id="ReferStaffDetails" style="@ReferralStaff">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input placeholder="Referred to" id="txtReferedTo" type="text" class="form-control autosearchclass" @RO value="@REFCountryEDWName" name="FullName" />
														</div>
														<input id="lblReferedTo" name="EDWPersonID" class="form-control" type="hidden" value="@REFCountryEDWPID" />

													</div>
													<div class="col-md-6" id="EthicsDetails" style="@EthicsDetailsStyle">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<select class="form-control" id="dllethics" name="CommunicationMethodID" @RO>
																<option value=""></option>

																@foreach (var item in Model.spGetvCMEthics)
																{
																	if (item.CommunicationMethodID == CMHQ)
																	{
																		<option value="@item.CommunicationMethodID" selected>@item.CommunicationMethodName</option>
																	}
																	else
																	{
																		<option value="@item.CommunicationMethodID">@item.CommunicationMethodName</option>
																	}


																}
															</select>
															<label for="dllethics">
																Communication Method
															</label>
														</div>
													</div>

													<div class="col-md-6" id="EthicsOtherDetails1" style="@ED1">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtHQsentDate" value="@HQDate" data-date-format="dd/mm/yyyy" @RO name="CommunicationDate" data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />
															<label for="txtHQsentDate">
																Date
															</label>
														</div>


													</div>

													@foreach (var item in Model.spEditComplaintCommunicationHQ.Where(x => x.CommunicationStageID == 52))
													{
														HQOCCM = Convert.ToString(item.OtherComplaintCommunicationMethodText);
														if (HQOCCM != null)
														{
															ED2 = "display:block";


														}
														else
														{
															ED2 = "display:none";
														}
													}
													<div class="col-md-6" id="EthicsOtherDetails" style="@ED2">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtOtherCommunicatioMethodInternal" value="@HQOCCM" type="text" @RO class="form-control" name="OtherComplaintCommunicationMethodText" />

															<label for="txtOtherCommunicatioMethodInternal">
																Other Communication Method
															</label>
														</div>
													</div>
													<div class="col-md-6" id="InternalReferralDetails1" style="@IRDetailStyle1">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtInternalDateofreferral" value="@IDateofreferral" @RO data-date-format="dd/mm/yyyy" name="CommunicationDate" data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />
															<label for="txtInternalDateofreferral">
																Date
															</label>
														</div>
													</div>
												</div>

												<div class="row">
													<div class="col-md-12" id="ifNoDetails" style="@NodetailStyle">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<textarea id="txtNoReferralReasonDescription" maxlength="255" class="form-control" @RO name="NoReferralReasonDescription">@NoRRD</textarea>
															<label for="txtNoReferralReasonDescription">
																Comments
															</label>
														</div>

													</div>
												</div>
											</div>
											<div class="portlet box blue-soft" id="InternalReferralDetails" style="@IRDetailStyle">
												<div class="portlet-title">
													<div class="caption" style="font-family:Calibri">
														<i></i>Referee Comments
													</div>
													<div class="tools">
														<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

													</div>
												</div>
												<div class="portlet-body ">

													<div class="row">
														<div class="col-md-12">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<textarea id="txtInternalReferralcomments" type="text" class="form-control" @RO name="Comment">@IComments</textarea>
																<label for="txtInternalReferralcomments">
																	Comments
																</label>

															</div>

														</div>


													</div>
												</div>
											</div>
											<div class="portlet box blue-soft" id="ExternalReferralDetails" style="@Externalralstyle">
												<div class="portlet-title">
													<div class="caption" style="font-family:Calibri">
														<i></i>External Referral
													</div>
													<div class="tools">
														<a href="javascript:;" class="expand" data-original-title="" title=""> </a>
													</div>
												</div>
												<div class="portlet-body">
													<div class="row"  style="display:none" id="HQDisclosureAuth">
														<div class="col-md-12">
															<div class="form-group form-md-line-input form-md-floating-label has-success">


																<input id="txtHQDisclosureAuthorizationText" type="text" maxlength="20" @RO class="form-control" value="@HQDisclosure" name="HQDisclosureAuthorizationText" />

																<label for="txtHQDisclosureAuthorizationText">
																	HQ disclosure authorization
																</label>

															</div>
														</div>
													</div>
													<div class="row">
														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">

																<input id="txtReferralAgencyName" type="text" class="form-control" @RO value="@ReferralAgency" name="ReferralAgencyName" />
																<label for="txtReferralAgencyName">
																	Organization / agency complaint referred to
																</label>
															</div>
														</div>
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtReferralPersonName" type="text" class="form-control" @RO value="@ExtPersonName" name="ReferralPersonName" />
																<label for="txtReferralPersonName">
																	Name
																</label>
															</div>
														</div>
														<div class="col-md-4">

															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<input id="txtReferralPersonPositionText" type="text" class="form-control" @RO value="@PersonPositionText" name="ReferralPersonPositionText" />
																<label for="txtReferralPersonPositionText">
																	Position
																</label>
															</div>



														</div>
													</div>
													<div class="row">
														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">

																<input id="txtExtReferralDate" value="@RefDate" data-date-format="dd/mm/yyyy" @RO name="ReferralDate" data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />
																<label for="txtExtReferralDate">
																	Date of referral
																</label>
															</div>
														</div>
														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">

																<input id="txtExternalContactComment" name="ContactComment" class="form-control" @RO type="text" value="@ExtComment" />
																<label for="txtExternalContactComment">
																	Contact information / details
																</label>
															</div>
														</div>
													</div>
												</div>
											</div>

										</div>
									</div>
									<div class="tab-pane fade" id="tab_6_4">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption"  style="font-family:Calibri">
													<i></i>Resolution
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">

												<div class="row">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<textarea id="txtInvestigationDescription" maxlength="255" type="text" class="form-control" @RO name="InvestigationDescription">@InvDes</textarea>
															<label for="txtInvestigationDescription">
																Description of investigation (if required)
															</label>
														</div>

													</div>
												</div>
												<div class="row">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<textarea id="txtCorrectiveActionDescription" maxlength="255" type="text" class="form-control" @RO value="" name="CorrectiveActionDescription">@Corrective</textarea>
															<label for="txtCorrectiveActionDescription">
																Description of corrective action and resolution process
															</label>
														</div>
													</div>
												</div>
												<div class="row">
													<div class="col-md-6">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtInvestigationPointOfContactName" maxlength="80" type="text" class="form-control" @RO value="@POCN" name="InvestigationPointOfContactName" />
															<label for="txtInvestigationPointOfContactName">
																Point of contact for the investigation  (if required)
															</label>

														</div>


													</div>
													<div class="col-md-6">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<div class="input-icon">
																<i class="fa fa-calendar"></i>
																<input id="txtResolutionDate" value="@ResDate" data-date-format="dd/mm/yyyy" name="ResolutionDate" @RO data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />
																<label for="txtResolutionDate">
																	Date resolution is taken (action/decision)
																</label>
															</div>
														</div>
													</div>
												</div>
											</div>

										</div>
									</div>
									<div class="tab-pane fade" id="tab_6_5">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption"  style="font-family:Calibri">
													<i  title="Response-communicating resolution back to the complainant or feedback provider"></i>Response
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>
												</div>
											</div>
											<div class="portlet-body">
												<div class="row">

													<div class="col-md-4">
														<label style="color:#999">
															Response Provided?
														</label>

													</div>
													<div class="col-md-4">
														<div class="form-group">
															<input type="checkbox" checked="@Model.spEditCBS[0].ResponseProvidedFlag" id="chkResponseProvidedFlag" @RO name="ResponseProvidedFlag" class="make-switch" data-on-text="Yes" data-off-text="No">
														</div>

													</div>
												</div>
												@{
													string RDetailsStyle = "display:none";
													string RDetailsStyle1 = "display:none";

													string RComDetailsStyle = "display:none";



													if (@Model.spEditCBS[0].ResponseProvidedFlag == true)
													{

														RDetailsStyle = "display:block";
														RDetailsStyle1 = "display:block";
														//RDOCMstyle = "display:block";
														RComDetailsStyle = "display:none";



													}
													else
													{
														RDetailsStyle = "display:none";
														RDetailsStyle1 = "display:none";
														//RDOCMstyle = "display:none";
														RComDetailsStyle = "display:block";
													}

												}
												<div class="row" id="ResponseDetail" style="@RDetailsStyle">
													<div class="col-md-4">
														@{
															if (FIRSTRESPEDWPID == 0)
															{
																FIRSTRESPEDWPID = Convert.ToInt32(Session["EDWPersonID"]);
																FIRSTRESPEDWName = Convert.ToString(Session["FullName"]);
															}
														}

														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input placeholder="Response Communited by" title="Name of staff who shared resolution" value="@FIRSTRESPEDWName" @RO id="txtResponseCommunited" type="text" class="form-control  autosearchclass" name="FullName" />

														</div>

														<input id="lblResponseCommunitedby" name="EDWPersonID" class="form-control" type="hidden" value="@FIRSTRESPEDWPID" />

													</div>
													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtResponseByNonIMCName" name="ResponseByNonIMCName" @RO class="form-control" maxlength="80" title="If response is shared by a non-IMC staff member, please describe:" value="@NonIMCName" />

															<label for="txtResponseByNonIMCName">
																Response By non IMC Name
															</label>
														</div>
													</div>
													<div class="col-md-4">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<div class="input-icon">
																<i class="fa fa-calendar"></i>
																<input id="txtCommunicationDate" value="@RepDate" data-date-format="dd/mm/yyyy" @RO name="CommunicationDate" data-date-end-date="+0d" class="form-control datepicker" size="16" />

																<label for="txtCommunicationDate">
																	Date response sent to complainant
																</label>
															</div>
														</div>
													</div>

												</div>
												<div class="row" id="ResponseDetail1" style="@RDetailsStyle1">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<select class="form-control" id="ddlResponseCommunicationMethodID" name="CommunicationMethodID" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetCommunicationMethodGeneral.OrderBy(x => x.GeneralDisplaySequenceNumber))
																{
																	if (item.CommunicationMethodID == RepCMID)
																	{
																		<option value=@item.CommunicationMethodID selected>@item.CommunicationMethodName</option>
																	}
																	else
																	{
																		<option value=@item.CommunicationMethodID> @item.CommunicationMethodName </option>
																	}
																}
															</select>

															<label for="ddlResponseCommunicationMethodID">
																Communication Method
															</label>
														</div>
													</div>
												</div>




												<div class="row" id="OtherComplaintCommunicationMethodResponse" style="@RDOCMstyle">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtOtherComplaintCommunicationMethodTextResponse" class="form-control" @RO value="@RepOtherComm" name="OtherComplaintCommunicationMethodText" />
															<label for="txtOtherComplaintCommunicationMethodTextResponse">Please specify other means of communicating response</label>
														</div>
													</div>
												</div>
												<div class="row" id="ResponseDetailComments" style="@RComDetailsStyle">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtNoResponseReasonDescription" type="text" class="form-control" value="@NoRepDesc" @RO name="NoResponseReasonDescription" />
															<label for="txtNoResponseReasonDescription">Comments</label>
														</div>


													</div>
												</div>



											</div>
										</div>
									</div>
									<div class="tab-pane fade" id="tab_6_6">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i></i>Appeal
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">

												<div class="row">
													<div class="col-md-6">
														<div class="form-group form-md-line-input form-md-floating-label has-success">


															<input id="txtAppealDate" value="@AppDate" data-date-format="dd/mm/yyyy" name="AppealDate" @RO data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />

															<label for="txtAppealDate">
																Date Appeal was received
															</label>
														</div>
													</div>


													<div class="col-md-6">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<select class="form-control" id="ddlAppealReceivedCommunicationMethodID" name="AppealReceivedCommunicationMethodID" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetCommunicationMethodGeneral.OrderBy(x => x.GeneralDisplaySequenceNumber))

																{
																	if (item.CommunicationMethodID == AppCMID)
																	{
																		<option value=@item.CommunicationMethodID selected>@item.CommunicationMethodName</option>
																	}
																	else
																	{
																		<option value="@item.CommunicationMethodID">@item.CommunicationMethodName</option>
																	}

																}
															</select>

															<label for="ddlAppealReceivedCommunicationMethodID">
																Appeal received via
															</label>
														</div>
													</div>
												</div>
												<div class="row" id="OtherComplaintCommunicationMethodAppealDetails" style="display:none">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtOtherComplaintCommunicationMethodTextAppeal" value="@AppOCMtext" @RO type="text" maxlength="80" class="form-control" name="OtherComplaintCommunicationMethodText" />
															<label for="txtOtherComplaintCommunicationMethodTextAppeal">Please specify other means of communicating appeal:</label>


														</div>
													</div>
												</div>
												<div class="row">

													<div class="col-md-6">
														<div class="form-group form-group form-md-line-input form-md-floating-label has-success">


															<input placeholder="search appeal committee persons name" id="txtAppealComm" name="" @RO style="width:640px" class="form-control" />

														</div>
													</div>
													<div class="col-md-2">
														<div class="form-group form-group form-md-line-input form-md-floating-label has-success">
															<button type="button" id="btnAddAppeal" class="btn btn-default green" @RO> <i class="fa fa-plus"></i>Add Appeal Committee</button>
														</div>
													</div>
													<div class="col-md-4">
														<div class="form-group form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtAppealEDWID" placeholder="employee id" class="form-control" value="" type="hidden" />

														</div>
													</div>

												</div>

												<div class="row">
													<div class="col-md-12" style="padding-right:5px;padding-left:5px;">
														<div class="portlet box blue-soft" id="prtBoxAppVAS">
															<div class="portlet-title">
																<div class="caption" style="font-family:Calibri">
																	Appeal Committee
																</div>
																<div class="tools">
																	<a href="javascript:;" class="collapse" data-original-title="" title=""> </a>

																</div>
															</div>
															<div class="portlet-body">

																<div class="table-scrollable">
																	<table class="table table-striped table-hover" id="tblAC">
																		<thead>
																			<tr>
																				<th>S.No </th>
																				<th>Full Name </th>
																				<th style="display:none">EDW Person ID</th>

																				<th> </th>
																			</tr>
																		</thead>
																		<tbody>
																			@{
																				int docsr22 = 0;
																			}

																			@foreach (var item in Model.spEditAppealCommittee)
																			{
																				docsr22++;
																				<tr>
																					<td>@docsr22</td>
																					@*<td>@item.CommunityBasedComplaintID</td>*@
																					<td>@item.FullName</td>
																					<td style="display:none">@item.EDWPersonID</td>
																					<td> <button id='btnDelete' onclick='showMessageConfirmation3(this,0)' type='button' class='btn btn-sm btn-danger' @RO> <i class='fa fa-trash'></i> Delete </button></td>
																					<td style="display:none">2</td>
																				</tr>


																			}


																		</tbody>
																	</table>
																</div>
															</div>
														</div>
													</div>



												</div>
												<div class="row">
													<div class="col-md-12">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<textarea id="txtProcessDescription" class="form-control" maxlength="255" value="" @RO name="ProcessDescription">@ProceDes</textarea>
															<label for="txtProcessDescription">
																Description/summary of appeals process
															</label>
															<span id="remain2" class="ClassRemaing pull-right">255 </span>
															<span class="ClassRemaing pull-right">characters remaining &nbsp;&nbsp;</span>
														</div>

													</div>
												</div>

											</div>
										</div>
										<div class="portlet box blue-soft" title="This is PII Field" style="@PrivateField">
											<div class="portlet-title">

												<div class="caption"   style="font-family:Calibri">
													<i></i>
													<span class="caption-subject font-white bold">Add Appeal Documents:</span><br />
													<span class="font-white" style="font-family:sans-serif ;font-size:small">
														Please note that:
														-The file size limit is 5 MB,
														-The following types are allowed: pdf, jpg, png, doc, docx, xls, xlsx, gif

													</span>
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body form">
												<div class="row">
													<div class="col-md-12">
														<!-- BEGIN PORTLET-->
														<div class="portlet light form-fit ">

															<div class="portlet-body form">
																<!-- BEGIN FORM-->
																@*<form action="#" class="form-horizontal form-bordered">*@
																<div class="form-body">

																	<div class="form-group">
																		@*<label class="control-label col-md-2 pull-left" style="color:#999">Add Files <span style="color:red;">  </span></label>*@
																		<div class="col-md-10">
																			<div class="fileinput fileinput-new" data-provides="fileinput">
																				<span class="btn yellow-crusta btn-file">
																					<span class="fileinput-new"> Select file <i class="fa fa-copy"></i> </span>

																					<input type="hidden"><input id="FileUpload1" type="file" multiple name="..." @RO>
																				</span>

																			</div>
																		</div>
																	</div>

																	<div class="table-scrollable">
																		<script>var sr2 = 0;</script>
																		<table class="table table-striped table-bordered table-hover" id="TableFiles1">
																			<thead>
																				<tr>
																					<th style="color:#999"> SR No </th>
																					<th style="color:#999"> File Name </th>
																					<th style="display:none">
																						Document Title
																						<span style="color:red;"> * </span>
																					</th>
																					<th style="display:none"> Remarks </th>
																					<th>  </th>
																					<th>  </th>
																					<th style="display:none"> Status </th>
																				</tr>
																			</thead>
																			<tbody>




																				@{
																					int docsr2 = 0;
																				}
																				@foreach (var item in Model.spGetCBCDcouments.Where(x => x.AppealDocumentFlag == true))
																				{
																					docsr2++;
																					<tr>
																						<td>@docsr2</td>
																						<td>@item.SupportingDocumentDescription</td>
																						<td style="display:none">@item.CommunityBasedComplaintID</td>
																						<td style="display:none">@item.CommunityBasedComplaintDocID</td>
																						<td><a download href="@item.DocumentHyperlink" class="btn btn-sm btn-primary"><i class='fa fa-download' @RO></i>  Download </a></td>
																						<td> <button id='btnDelete' onclick='showMessageConfirmation2(this,@item.CommunityBasedComplaintDocID)' type='button' class='btn btn-sm btn-danger' @RO> <i class='fa fa-trash'></i> Delete </button></td>
																						<td style="display:none">2</td>
																					</tr>


																				}




																			</tbody>
																		</table>
																		<script></script>
																	</div>




																</div>

																@*</form>*@
																<!-- END FORM-->
															</div>
														</div>
														<!-- END PORTLET-->
													</div>
												</div>

											</div>
										</div>
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption"  style="font-family:Calibri">
													<i></i>Appeal Resolution Details
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">
												<div class="row">
													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtAppealResolutionDate" value="@AResolutionDate" data-date-format="dd/mm/yyyy" @RO name="AppealResolutionDate" data-date-end-date="+0d" class="form-control datepicker" size="16" />

															<label for="txtAppealResolutionDate">
																Appeal Resolution Date
															</label>
														</div>
													</div>
												</div>
												<div class="row">
													<div class="col-md-12">

														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<textarea id="txtAppealResolutionDescription" class="form-control" value="" maxlength="255" @RO name="AppealResolutionDescription">@ApResolutionDes</textarea>
															<label for="txtAppealResolutionDescription">
																Comments
															</label>
															<span id="remain" class="ClassRemaing pull-right">255</span>
															<span class="ClassRemaing pull-right"> characters remaining &nbsp;&nbsp;</span>
														</div>
													</div>
												</div>
											</div>
										</div>
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption"  style="font-family:Calibri">
													<i></i>Appeal Response Details
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">
												@*<div class="row">
														<div class="col-md-4">
															<label style="color:#999">
																Response Provided For Appeal?
															</label>

														</div>
														<div class="col-md-4">
															<div class="form-group">
																<input type="checkbox" checked="@Model.spEditCBS[0].ResponseAppeal" id="chkResponseProvidedFlagAppeal" @RO name="ResponseProvidedFlagAppeal" class="make-switch" data-on-color="success" data-off-color="danger" data-on-text="Yes" data-off-text="No">
															</div>

														</div>
													</div>*@

												<div class="row">
													<div class="col-md-6">
														@{
															if (APPRESPEDWPID == 0)
															{
																APPRESPEDWPID = Convert.ToInt32(Session["EDWPersonID"]);
																APPRESPEDWName = Convert.ToString(Session["FullName"]);
															}
														}
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input placeholder="Name of staff who shared resolution" id="txtResponseCommunitedAppeal" @RO value="@APPRESPEDWName" type="text" class="form-control autosearchclass" name="FullName" />
														</div>
														<input id="lbltxtResponseCommunitedAppeal" name="EDWPersonID" value="@APPRESPEDWPID" class="form-control" type="hidden" />
													</div>
													<div class="col-md-6">


														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<input id="txtCommunicationDateAppeal" value="@RAppealDate" data-date-format="dd/mm/yyyy" @RO name="CommunicationDate" data-date-end-date="+0d" class="form-control datepicker" size="16" />

															<label for="txtCommunicationDateAppeal">
																Date response sent to complainant
															</label>
														</div>
													</div>
													<div class="col-md-12">

														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<select class="form-control" id="ddlResponseCommunicationMethodIDAppeal" name="CommunicationMethodID" @RO>
																<option value=""></option>
																@foreach (var item in Model.spGetCommunicationMethodGeneral.OrderBy(x => x.GeneralDisplaySequenceNumber))
																{
																	if (item.CommunicationMethodID == RAppealCMID)
																	{
																		<option value=@item.CommunicationMethodID selected>@item.CommunicationMethodName</option>
																	}
																	else
																	{
																		<option value="@item.CommunicationMethodID">@item.CommunicationMethodName</option>
																	}
																}
															</select>

															<label for="ddlResponseCommunicationMethodIDAppeal">
																Communication Method
															</label>


														</div>
													</div>

													@{string appealresponsestyle = "display:none"; }
													@foreach (var item in Model.spEditComplaintCommunicationAR.Where(x => x.CommunicationStageID == 57))
													{
														RAppealOCC = Convert.ToString(item.OtherComplaintCommunicationMethodText);
														if (RAppealOCC != null)
														{
															appealresponsestyle = "display:block";
														}
														else
														{
															appealresponsestyle = "display:none";
														}
													}
													<div class="col-md-12" id="ResponseAppealOthertext" style="@appealresponsestyle">
														<div class="form-group form-md-line-input form-md-floating-label has-success">

															<input id="txtOtherCCMTextAppeal" class="form-control" value="@RAppealOCC" @RO name="OtherComplaintCommunicationMethodText" />
															<label for="txtOtherCCMTextAppeal">Other Complaint Communication Method</label>
														</div>
													</div>
												</div>

											</div>
										</div>



									</div>
									<div class="tab-pane fade" id="tab_6_7">
										<div class="portlet box blue-soft">
											<div class="portlet-title">
												<div class="caption" style="font-family:Calibri">
													<i></i>Feedback/Complaint Closure
												</div>
												<div class="tools">
													<a href="javascript:;" class="expand" data-original-title="" title=""> </a>

												</div>
											</div>
											<div class="portlet-body">


												<div class="row">


													<div class="col-md-4">
														<div class="form-group form-md-line-input form-md-floating-label has-success">
															<div class="input-icon">
																<i class="fa fa-calendar"></i>
																<input id="txtClosedDate" value="@ClosureDate" data-date-format="dd/mm/yyyy" name="ClosedDate" @RO data-date-end-date="+0d" class="form-control datepicker" size="16" type="text" />
																<label for="txtClosedDate">
																	Date Closed
																</label>
															</div>
														</div>
													</div>
													@{



														if (closedbypersonID == 0)
														{
															closedbypersonID = Convert.ToInt32(Session["EDWPersonID"]);

														}
													}
													@if (!(closedby == null))
													{
														<div class="col-md-4">
															<div class="form-group form-md-line-input form-md-floating-label has-success">
																<div class="input-icon">
																	<i class="fa fa-user"></i>
																	<input id="txtClosedByPersonName" value="@closedby" disabled name="ClosedByEDWPersonID" class="form-control" type="text" />
																	<label for="lblClosedByEDWPersonID">
																		Closed by
																	</label>
																	<input id="lblClosedByEDWPersonID" name="ClosedByEDWPersonID" type="hidden" value="@closedbypersonID" />
																</div>
															</div>
														</div>
													}

												</div>
											</div>
										</div>
									</div>
									<button type="button" id="btnSaveUser" class="btn btn-primary btn-lg" @RO> <i class="fa fa-save"></i> Save Complaint  </button>

									@*<button type="button" id="btnSaveUser1" class="btn btn-primary btn-lg"> <i class="fa fa-save"></i> Save Complaint  </button>*@
								</div>

							</div>
						</div>
					</div>
				</div>

			</div>

		</div>
	</div>

</form>


@section scripts{

	@Scripts.Render("~/bundles/DataTable/jquery")
	<script src="~/Content/assets/global/plugins/typeahead/handlebars.min.js" type="text/javascript"></script>
	<script src="~/Content/assets/global/plugins/typeahead/typeahead.bundle.min.js" type="text/javascript"></script>
	<script src="~/Content/assets/pages/scripts/components-typeahead.js" type="text/javascript"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.6.4/js/bootstrap-datepicker.js"></script>
	<script src="~/Content/assets/global/plugins/select2/js/select2.full.min.js"></script>
	<script src="~/Content/assets/pages/scripts/components-select2.min.js" type="text/javascript"></script>

	<script src="~/Content/assets/global/plugins/bootstrap-confirmation/bootstrap-confirmation.min.js" type="text/javascript"></script>
	<script src="~/Content/assets/pages/scripts/ui-confirmations.min.js" type="text/javascript"></script>
	@*<script src="~/Content/assets/pages/scripts/form-validation.js"></script>*@
	@*<script src="~/Content/assets/pages/scripts/form-validation-Application.js"></script>*@
	<script>
			var viewBag = "";
		$(document).ready(function () {

			 IsReturnedFromEdit = "@TempData["IsEdit"]";

					   if ($('#dllFieldSite').val() != "") {
						   $("#main").show();
					   }
					   else {
						   $("#main").hide();
					   }

			if ($("#dllClassification").val() == 21) {

				if ($('#ddlComplaintCategoryName').val() == 6) {
					$("#HQDisclosureAuth").show();
				}
				else {
					$("#HQDisclosureAuth").hide();
				}
               }

			if ($("#dllClassification").val() == 20) {

				if ($('#ddlComplaintCategoryName').val() == 5) {


					$("#dllReferralLevel").val("46");
					$('#dllReferralLevel').change();
					$("#EthicsDetails").show();
					$("#EthicsOtherDetails1").show();
					$("#EthicsOtherDetails1").show();


					//$("#UserAssignedDetails").hide();
					$("#InternalReferralDetails1").hide();
					$("#InternalReferralDetails").hide();
					$("#ReferStaffDetails").hide();

					//this is referal comment box
					$("#ifNoDetails").hide();

				}
				else {

					$("#dllReferralLevel").val("45");
					$('#dllReferralLevel').change();
					$("#EthicsDetails").hide();
					$("#EthicsOtherDetails1").hide();
					$("#EthicsOtherDetails1").hide();


					$("#UserAssignedDetails").show();
					$("#InternalReferralDetails1").show();
					$("#InternalReferralDetails").show();
					$("#ReferStaffDetails").show();
					//this is referal comment box
					$("#ifNoDetails").hide();

				}







			}
			

			viewBag = "@TempData["message"]";

			
				});
		



		$('#ddlComplaintCategoryName').change(function () {
			debugger;
			if ($("#dllClassification").val() == 20) {
		
			
			if ($('#ddlComplaintCategoryName').val() == 5) {

				$('#dllReferralLevel').change();

				$("#dllReferralLevel").val("46");
				//Hq
				$("#EthicsDetails").show();
				$("#EthicsOtherDetails1").show();
				$("#EthicsOtherDetails1").show();

				$("#ReferStaffDetails").hide();
				//Country
				//$("#UserAssignedDetails").hide();
				$("#InternalReferralDetails1").hide();
				$("#InternalReferralDetails").hide();

				//this is referal comment box
				$("#ifNoDetails").hide();
				
			}
			else {

				$('#dllReferralLevel').change();
				$("#dllReferralLevel").val("45");
				//HQ
				$("#EthicsDetails").hide();
				$("#EthicsOtherDetails1").hide();
				$("#EthicsOtherDetails1").hide();
			
				//Country
				$("#UserAssignedDetails").show();
				$("#InternalReferralDetails1").show();
				$("#InternalReferralDetails").show();
				$("#ReferStaffDetails").show();
				//this is referal comment box
				$("#ifNoDetails").hide();

			}
			}

			//external
			if ($("#dllClassification").val() == 21) {

				//this code is for show and hide headqueater texbox for external
				if ($('#ddlComplaintCategoryName').val() == 6) {
					$("#HQDisclosureAuth").show();
				}
				else {
					$("#HQDisclosureAuth").hide();


				}

			}
		});

		$('#dllClassification').change(function () {

			debugger;
			if ($('#ddlComplaintCategoryName').val() != 5) {

				//HQ
				$("#EthicsDetails").hide();
				$("#EthicsOtherDetails1").hide();
				$("#EthicsOtherDetails1").hide();

				//Country
				$("#UserAssignedDetails").show();
				$("#InternalReferralDetails1").show();
				$("#InternalReferralDetails").show();
				$("#ReferStaffDetails").show();
				//this is referal comment box
				$("#ifNoDetails").hide();
			}
		});


		function HideContactDetails() {

			var phone = document.getElementById('txtPhoneNumber').value;
			var email = document.getElementById('txtEmailAddress').value;
			var addres = document.getElementById('txtAddressText').value;
			var Avenuetext = document.getElementById('txtOtherCommunicationAvenueText').value;
			if (phone != "" || email != "" || addres != "" || Avenuetext != "") {


				$("#Canwecontact").show();
			}
			else {
				$("#Canwecontact").hide();

			}
		}


		function MyValidation() {
			var ValidationOkay = true;
			var IsRef = true;
			var ResolutionToComp = true;
			var ResponseTocomp = true;


			var RefMsg = "";
			var ResolutionMsg = "";
			var ResponseMsg = "";

			//var IsClosed = false;
			var fieldRequired = "Following Fields are mandatory: ";

			if ($("#txtClosedDate").val() != "") {


				var IsRef = false;
				var ResolutionToComp = false;
				var ResponseTocomp = false;


			}


			if ($('#txtReceivedDate').val() == "") {
				ValidationOkay = false;
				fieldRequired = fieldRequired + " Date feedback/complaint Received,";

			}
			if ($('#txtDateComplainwasRaised').val() == "") {
				ValidationOkay = false;
				fieldRequired = fieldRequired + " Date Complain was Raised,";
            }
            if ($('#dllFacility').val() == "") {
                ValidationOkay = false;
                fieldRequired = fieldRequired + "Select Location/camp/facility ,";
            }
            

			//referral logic on close
			debugger;
			var clsID = Number($("#dllClassification").val());
			if ($("#txtClosedDate").val() != "") {
				if (clsID == 0) {

					if (document.getElementById("chkReferralRequiredFlag").checked == false) {
						if ($("#txtNoReferralReasonDescription").val() == "") {

							RefMsg = "Referral Reason Description Required";
							ValidationOkay = false;

						}
						else {
							IsRef = true;
						}
					}
				}
				if (clsID == 20) {

					var isReferalChecked = document.getElementById("chkReferralRequiredFlag").checked;

					if (isReferalChecked == false) {
						if ($("#txtNoReferralReasonDescription").val() == "") {

							RefMsg = "Referral Reason Description Required";
							ValidationOkay = false;

						}
						else {
							IsRef = true;
						}
					}
					else if ($("#dllReferralLevel").val() == 45) {

						if ($("#txtInternalDateofreferral").val() == "") {
							RefMsg = " Internal Dates Required,";
							ValidationOkay = false;
						}
						if ($('#txtReferedTo').val() == "") {
							RefMsg += " Internal Refered To Required";
							ValidationOkay = false;
						}

						if ($("#txtInternalDateofreferral").val() != "" && $('#txtReferedTo').val() != "") {
							IsRef = true;
							RefMsg = "";
						}

					}
					else if ($("#dllReferralLevel").val() == 46) {

						if ($("#txtHQsentDate").val() == "") {

							RefMsg = "HQ sent Dates Required,";
							ValidationOkay = false;
						}

						if ($("#dllethics").val() == "") {

							RefMsg += "HQ Communication method  Required,";
							ValidationOkay = false;
						}

						if ($("#txtHQsentDate").val() != "" && $('#dllethics').val() != "") {
							RefMsg = "";
							IsRef = true;
						}
					}

				}
				else if (clsID == 21) {
					//External Case
					if (document.getElementById("chkReferralRequiredFlag").checked == false) {
						if ($("#txtNoReferralReasonDescription").val() == "") {
							RefMsg = "No Referral Reason Description required";
							ValidationOkay = false;
						}
						else {
							IsRef = true;
						}
					}
					else if ($("#txtExtReferralDate").val() == "") {
						RefMsg = "External Dates Required,";
						ValidationOkay = false;


					}
					else {
						RefMsg = "";
						IsRef = true;
					}

				}
			}

			debugger;
			//resolution logic  on close

			
			if ($("#txtClosedDate").val() != "") {

				if ($("#txtResolutionDate").val() == ""  ) {

					if (($('#ddlComplaintCategoryName').val() != 0) && ($('#ddlComplaintCategoryName').val() != 1) && ( $('#ddlComplaintCategoryName').val() != 2)) {

						ResolutionMsg = "Resolution Date  Required,";
						ValidationOkay = false;
						ResolutionToComp = false;
					}
					else {

						ResolutionMsg = "";
						ResolutionToComp = true;
					}
					
				}
				else if ($("#txtCorrectiveActionDescription").val() == "") {

					if (($('#ddlComplaintCategoryName').val() != 0) && ($('#ddlComplaintCategoryName').val() != 1) && ($('#ddlComplaintCategoryName').val() != 2)) {
						   ResolutionMsg = "Resolution Desciption Required,";
							ValidationOkay = false;
							ResolutionToComp = false;
					}
					else {

						ResolutionMsg = "";
						ResolutionToComp = true;
					}

				
				}
				else {

					ResolutionMsg = "";
					ResolutionToComp = true;
				}
			}



			//response logic  on close

			ResponseMsg = "";
			if ($("#txtClosedDate").val() != "") {

				if (document.getElementById("chkResponseProvidedFlag").checked == true) {

					if (($('#ddlComplaintCategoryName').val() != 0) && ($('#ddlComplaintCategoryName').val() != 1) && ($('#ddlComplaintCategoryName').val() != 2)) {

						if ($("#txtCommunicationDate").val() == "") {

							ResponseMsg += " Communication Date Required, ";
							ValidationOkay = false;

						}
					}
					else {

						ResponseMsg ="";
						ValidationOkay = true;
					}

				}
				else {
					if (($('#ddlComplaintCategoryName').val() != 0) && ($('#ddlComplaintCategoryName').val() != 1) && ($('#ddlComplaintCategoryName').val() != 2)) {
						
						
							if ($("#txtNoResponseReasonDescription").val() == "")
							{
						ResponseMsg = "No Response Reason Description required,";
						ValidationOkay = false;
				              	}
						}
				        else
						{

							ResponseMsg = "";
							ValidationOkay = true;

						}
					
				}
			}


			if ( ResponseMsg == "")
			{
					ResponseTocomp = true;
			}


			debugger;
			if ($("#txtClosedDate").val() != "") {
				if (IsRef == false) {
					ValidationOkay = false;
					RefMsg = "Referal Required, " + RefMsg;

				} if (ResolutionToComp == false) {
					ValdationOkay = false;
					ResolutionMsg = "Resolution Required, " + ResolutionMsg;
				}
				if (ResponseTocomp == false) {
					ValdationOkay = false;
					ResponseMsg = "Response Required, " + ResponseMsg;
				}



			}


			if ($("#ddlAppealReceivedCommunicationMethodID").val() != "") {
				if ($('#txtAppealDate').val() == "") {
					ValidationOkay = false;
					fieldRequired = fieldRequired + "Appeal date is required,"

				}


			}

			if (ValidationOkay == false) {
				//showMessage("Validation Summary", fieldRequired, "warning", "btn-danger");

				showMessage("Validation Summary", fieldRequired + "" + RefMsg + " " + ResolutionMsg + " " + ResponseMsg, "warning", "btn-danger");
			}


			return ValidationOkay;

		}



		$('.datepicker').datepicker({ todayHighlight: true });
		//file flags
		var formData = new FormData();
		var formData2 = new FormData();
		var IsReturnedFromEdit = 0;

		//flow of app flags


		
      //below code is for showing controls on  selecting other options in dropdowns
		function myFunction() {
			debugger;
			if ($('#chkReceivedByIMCStaffFlag').is(":checked")) {
				$("#ReciviedByDetails").show();
				$("#RecivedByNonIMCDetails").hide();
			} else {
				$("#RecivedByNonIMCDetails").show();
				$("#ReciviedByDetails").hide();
			}
		}

			$('#dllComplaintCommunicationMethodID').change(function () {

			debugger;

			if ($('#dllComplaintCommunicationMethodID').val() == 43) {
			$("#OtherComplaintCommunicationMethodTextDetails").show();

			}
			else {
			$("#OtherComplaintCommunicationMethodTextDetails").hide();
			}

			});

			$('#dllFieldSectorCode').change(function () {
			if ($('#dllFieldSectorCode').val() == 'OTHER') {
			     $("#OtherSectorProgram").show();
			}
			else {
			$("#OtherSectorProgram").hide();
			}
		});

		$('#ddlVulnerabilityTypeID').change(function () {
			debugger;
			if ($('#ddlVulnerabilityTypeID').val() == 99) {
				$("#OtherVulnerablity").show();
			}
			else {
				$("#OtherVulnerablity").hide();
			}
		});


		
			$('#ddlAcknowledgementCommunicationMethodID').change(function () {

			debugger;

			if ($('#ddlAcknowledgementCommunicationMethodID').val() == 43) {
			$("#OtherComplaintCommunicationMethodAck").show();

			}
			else {
			$("#OtherComplaintCommunicationMethodAck").hide();
			}

			});

			$('#ddlResponseCommunicationMethodID').change(function () {

			debugger;

			if ($('#ddlResponseCommunicationMethodID').val() == 43) {

				$("#OtherComplaintCommunicationMethodResponse").show();

			}
			else if ($('#ddlResponseCommunicationMethodID').val() != 43){
			$("#OtherComplaintCommunicationMethodResponse").hide();
			}

			});

			$('#ddlAppealReceivedCommunicationMethodID').change(function () {

			debugger;

			if ($('#ddlAppealReceivedCommunicationMethodID').val() == 43) {
			$("#OtherComplaintCommunicationMethodAppealDetails").show();

			}
			else {
			$("#OtherComplaintCommunicationMethodAppealDetails").hide();
			}

			});

			$('#ddlLanguageName').change(function () {

			debugger;

			if ($('#ddlLanguageName').val() == "OTHER") {
			$("#OtherlanguagesDetails").show();

			}
			else {
			$("#OtherlanguagesDetails").hide();
			}

			});
			//email validation
			$('#txtEmailAddress').change(function () {
			debugger;
			if (!ValidateEmail($("#txtEmailAddress").val())) {
			        showMessage("Alert", "Please input valid email address", "warning", "btn-danger");
			}
			});
			function ValidateEmail(email) {
			var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
			return expr.test(email);
			};
			//Date validation
		$("#txtDateComplainwasRaised").change(function () {
			debugger;
			var a = $('#txtReceivedDate').val();
			if (a == null || a == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
				$("#txtDateComplainwasRaised").datepicker('setDate', "");
			}
			else {

				var dtReceivedDate = $('#txtReceivedDate').datepicker('getDate');
				var dtDateComplainwasRaised = $('#txtDateComplainwasRaised').datepicker('getDate');
				if (dtDateComplainwasRaised > dtReceivedDate) {

					$("#txtDateComplainwasRaised").datepicker('setDate', "");

					showMessage("Alert Date", "Must be less than or equals to complaint received date", "warning", "btn-danger");

				}


			}

		});
		$("#txtAcknowledgementProvidedDate").change(function () {
			debugger;
			var dtReceivedDate = $('#txtReceivedDate').datepicker('getDate');

			var dtAck = $('#txtAcknowledgementProvidedDate').datepicker('getDate');
			if (dtReceivedDate == null || dtReceivedDate == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
			}
			else {

				if (dtAck < dtReceivedDate) {
					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtAcknowledgementProvidedDate").datepicker('setDate', "");

				}

			}

		});
		$("#txtInternalDateofreferral").change(function () {
			debugger;
			var dtReceivedDate = $('#txtReceivedDate').datepicker('getDate');
			var dtRef = $('#txtInternalDateofreferral').datepicker('getDate');
			if (dtReceivedDate == null || dtReceivedDate == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
			}
			else {
				if (dtRef < dtReceivedDate) {
					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtInternalDateofreferral").datepicker('setDate', "");

				}
			}

		});
		$("#txtHQsentDate").change(function () {
			debugger;
			var dtReceivedDate = $('#txtReceivedDate').datepicker('getDate');
			var dtHqSentDate = $("#txtHQsentDate").datepicker('getDate');
			if (dtReceivedDate == null || dtReceivedDate == "") {
				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
				$("#txtHQsentDate").datepicker('setDate', "");
			}
			else {
				if (dtHqSentDate < dtReceivedDate) {
					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtHQsentDate").datepicker('setDate', "");


				}

			}

		});
		

		$("#txtAppealDate").change(function () {
			debugger;
			var dtRecivedDate = $('#txtReceivedDate').datepicker('getDate');
			var dtAppealDate = $('#txtAppealDate').datepicker('getDate');
			if (dtRecivedDate == null || dtRecivedDate == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
				$("#txtCommunicationDate").datepicker('setDate', "");
			}
			else {
				if (dtAppealDate < dtRecivedDate) {
					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtAppealDate").datepicker('setDate', "");
				}

			}

		});



		$("#txtAppealResolutionDate").change(function () {

			debugger;
			var dtRecivedDate = $('#txtReceivedDate').datepicker('getDate');
			var dtAppealResolutionDate = $('#txtAppealResolutionDate').datepicker('getDate');

			if (dtRecivedDate == null || dtRecivedDate == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
				$("#txtAppealResolutionDate").datepicker('setDate', "");

			}
			else {
				if (dtAppealResolutionDate < dtRecivedDate) {
					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtAppealResolutionDate").datepicker('setDate', "");
				}

			}
		});


		$("#txtClosedDate").change(function () {
			debugger;

			if ($('#txtClosedDate').val() == "") {
				$("#appealTab").attr("data-toggle", "");
				$("#appealTab").attr("style", "cursor: no-drop");

			}
			else {
				$("#appealTab").attr("data-toggle", "tab");
				$("#appealTab").attr("style", "");

			}

			debugger;
			var dtRecivedDate = $('#txtReceivedDate').datepicker('getDate');
			var dtCloseDate = $('#txtClosedDate').datepicker('getDate');

			if (dtRecivedDate == null || dtRecivedDate == "") {

				showMessage("Alert", "Please input feedback complaint recived date first", "warning", "btn-danger");
				$("#txtClosedDate").datepicker('setDate', "");
			}
			else {
				if (dtCloseDate < dtRecivedDate) {

					showMessage("Alert Date", "Must be greater than or equals to complaint received date", "warning", "btn-danger");
					$("#txtClosedDate").datepicker('setDate', "");
				}

			}

		});
			//this code is use to hide and show Internal and external form



		$('#chkReferralRequiredFlag').on('switchChange.bootstrapSwitch', function (event, state) {
		debugger;
			if (state == true) {
				IsFlagChecked = true;
		        	$("#ifNoDetails").hide();
				if ($('#dllClassification').val() == 20) {
					$("#UserAssignedDetails").show();
				}
				else if ($('#dllClassification').val() == 21){

					$("#ExternalReferralDetails").show();
				}


			}
			else if (state == false) {

				IsFlagChecked = false;
				$("#ifNoDetails").show();
				$("#InternalReferralDetails").hide();
				$("#InternalReferralDetails1").hide();
				$("#ExternalReferralDetails").hide();
				$("#UserAssignedDetails").hide();
				$("#EthicsDetails").hide();
				$("#ReferStaffDetails").hide();

				$("#EthicsOtherDetails1").hide();
				$("#EthicsOtherDetails").hide();

				$("#Externalcheck").hide();

				$("#txtHQDisclosureAuthorizationText").val('')
				$("#txtReferralAgencyName").val('');
				$("#txtReferralPersonName").val('');
				$("#txtReferralPersonPositionText").val('');
				$("#txtExtReferralDate").val('');
				$("#txtExternalContactComment").val('');

		}
		});
	    $('#dllClassification').change(function () {

			debugger;

	if ($('#dllClassification').val() == 20) {

		//	$("#UserAssignedDetails").show();
			$("#Externalcheck").hide();
			$("#ExternalReferralDetails").hide();
	     	//$("#ifNoDetails").hide();
			}
	else if ($('#dllClassification').val() == 21) {

		$("#InternalReferralDetails").hide();
		$("#InternalReferralDetails1").hide();
			$("#Externalcheck").show();
			$("#EthicsOtherDetails1").hide();
            $("#UserAssignedDetails").hide();
			$("#EthicsDetails").hide();
			$("#EthicsOtherDetails").hide();
			$("#ReferStaffDetails").hide();
		//	$("#ExternalReferralDetails").show();

			//$("#ifNoDetails").hide();
			}
			});
		$('#dllReferralLevel').change(function () {

			debugger;

			if ($('#dllReferralLevel').val() == 45) {
						$("#ReferStaffDetails").show();
						$("#EthicsDetails").hide();
				$("#EthicsOtherDetails").hide();
				$("#EthicsOtherDetails1").hide();

				$("#InternalReferralDetails").show();
				$("#InternalReferralDetails1").show();
			}
			else if ($('#dllReferralLevel').val() == 46) {
					$("#ReferStaffDetails").hide();
					$("#EthicsDetails").show();
				$("#InternalReferralDetails").hide();
				$("#InternalReferralDetails1").hide();
					$("#EthicsOtherDetails").hide();
					$("#EthicsOtherDetails1").show();
			}
			});
		$('#dllethics').change(function () {

			debugger;

			if ($('#dllethics').val() == 43) {
			$("#EthicsOtherDetails").show();

			}
			else {
			$("#EthicsOtherDetails").hide();
			}

				});

			//this below code is for response controls hide and show

			$('#chkResponseProvidedFlag').on('switchChange.bootstrapSwitch', function (event, state) {
			    if (state == true) {
						$("#ResponseDetail").show();
						$("#ResponseDetail1").show();
					$("#ResponseDetailComments").hide();
					$("#OtherComplaintCommunicationMethodResponse").hide();
					// text box value null on yes
					$("#txtNoResponseReasonDescription").val('');


		            	}
		     	else {
						$("#ResponseDetail").hide();
						$("#ResponseDetail1").hide();
						$("#OtherComplaintCommunicationMethodResponse").hide();
				    	$("#ResponseDetailComments").show();


					$("#txtCommunicationDate").val('');
					$("#ddlResponseCommunicationMethodID").val('');

					$("#txtResponseCommunited").val('');
					$("#txtResponseByNonIMCName").val('');


			         }
			     });
			$('#chkAcknowledgementProvidedFlag').on('switchChange.bootstrapSwitch', function (event, state) {
		      	if (state == true) {
					    $("#AcknowledgmentDetail1").show();
					    $("#AcknowledgmentDetail2").show();
		    			$("#AcknowledgmentCommentsDetail").hide();
		    	}
			else {
					$("#AcknowledgmentDetail1").hide();
					$("#AcknowledgmentDetail2").hide();
					$("#OtherComplaintCommunicationMethodAck").hide();
					$("#AcknowledgmentCommentsDetail").show();

					//$("#ddlAcknowledgementCommunicationMethodID").val('');
					//$("#txtAcknowledgementProvidedDate").val('');

					//$("#chkComplainantQuestionsAddressedFlag").prop("checked", false);
					//$("#chkHandlingProcessExplainedFlag").prop("checked", false);
					//$("#chkResponseReceivalExplainedFlag").prop("checked", false);
					//$("#chkFollowUpContactDetailsFlag").prop("checked", false);
					//$("#chkProcessTimelineDiscussedFlag").prop("checked", false);

			  }
			});


			$('#ddlResponseCommunicationMethodIDAppeal').change(function () {
						debugger;
						if ($('#ddlResponseCommunicationMethodIDAppeal').val() ==43) {
							$("#ResponseAppealOthertext").show();
						}
						else {
							$("#ResponseAppealOthertext").hide();
						}
					});

			//this below code is use to show maximum length and remaings in comment boxes
			var maxchars = 255;
			$('#txtAppealResolutionDescription').keyup(function () {
			       var tlength = $(this).val().length;
			       $(this).val($(this).val().substring(0, maxchars));
					var tlength = $(this).val().length;
					remain = maxchars - parseInt(tlength);
					$('#remain').text(remain);
			});
			var maxchars2 = 255;
			$('#txtProcessDescription').keyup(function () {
					var tlength = $(this).val().length;
					$(this).val($(this).val().substring(0, maxchars2));
					var tlength = $(this).val().length;
					remain = maxchars2 - parseInt(tlength);
					$('#remain2').text(remain);
			});
			var maxcharSectorProgram = 80;
			$('#txtOtherSectorProgram').keyup(function () {
					var tlength = $(this).val().length;
					$(this).val($(this).val().substring(0, maxcharSectorProgram));
					var tlength = $(this).val().length;
					remain = maxcharSectorProgram - parseInt(tlength);
					$('#remainSectorProg').text(remain);

			});
			var maxcharVul = 80;
			$('#txtOtherVulnerabilityType').keyup(function () {
					var tlength = $(this).val().length;
					$(this).val($(this).val().substring(0, maxcharVul));
					var tlength = $(this).val().length;
					remain = maxcharVul - parseInt(tlength);
					$('#remainVul').text(remain);

			});
			var maxcharSubject = 80;
			$('#txtSubject').keyup(function () {
					var tlength = $(this).val().length;
					$(this).val($(this).val().substring(0, maxcharSubject));
					var tlength = $(this).val().length;
					remain = maxcharSubject - parseInt(tlength);
					$('#remainSubject').text(remain);

			});
			var maxcharremainCD = 250;
			$('#txtComplaintDescription').keyup(function () {
					var tlength = $(this).val().length;
					$(this).val($(this).val().substring(0, maxcharremainCD));
					var tlength = $(this).val().length;
					remain = maxcharremainCD - parseInt(tlength);
						$('#RemComplaintDescription').text(remain);

		});


		  $('#ddlComplaintCategoryName').change(function () {
			debugger;
			  Catid = $('#ddlComplaintCategoryName').val().trim();


			  var popover = $("[data-toggle='popover']");



              if (Catid != "" && Number(Catid) > 0) {
				debugger;
				$.ajax({
					type: 'Get',
					url: '/ComplainManagement/ComplainForm/spGetCategory',
					dataType: 'json',

					data: { catid: Catid },
					async: false,
					success: function (data) {
						debugger;
						if (data != null) {
							if (Object.keys(data).length != 0) {
								$.each(data, function (key, value) {

									debugger;

									//$("input[name='email']").tooltip('destroy');
									$("#testbox").tooltip('destroy');
									//Adds new one
									setTimeout(function () {
										$("#testbox").tooltip({
											title: value.ComplaintCategoryDescription,
											placement: 'top',
											template: '<div class="tooltip" role="tooltip">' +
												'<div class="tooltip-arrow"></div>' +
												'<div class="tooltip-inner"></div></div>'

										});

										//Shows it
										$("#testbox").tooltip('show');
									}, 250);


									//popover.popover('destroy').popover({
									//	placement: "left",
									//	html: true,
									//	title: value.ComplaintCategoryName,
									//	content: value.ComplaintCategoryDescription,
									//})
									//	.popover('show');


								});
							}
						}
					},
					error: function () {

						showMessage("Oops, Something went wrong", "Error Occured while Routing Charges Ajax Call, Please contact with administrator", "warning", "btn-danger");
					}
				});

			}
		});


		  $('#dllFieldSite').change(function () {

			debugger;

			if ($('#dllFieldSite').val() != "") {
				$("#main").show();
			}
			else {
				$("#main").hide();
			}

		});




               //Below code is use to call ajax to fill user details in textboxex
				$(document).ready(function () {
						$("#txtReceivedByEDWPersonID").blur(function () {
						debugger;
						var ReceivedByEDWPersonID = $('#txtReceivedByEDWPersonID').val();
						if (ReceivedByEDWPersonID != "") {
						debugger;
						$.ajax({
						type: 'GET',
						url: '/ComplainManagement/ComplainForm/GetUserDetails',
						datatype: "json",
						contentType: 'application/json; charset=utf-8',
						data: { "UserName": ReceivedByEDWPersonID },

						async: false,
						success: function (data) {
						debugger;
						if (data != null) {
						if (Object.keys(data).length != 0) {
						$.each(data, function (key, value) {
						//$('#TxtName').val(value.FullName);


						$('#txtReceivedByEDWPersonID').val(value.FullName);

						$('#lblrecivedbyID').val(value.EDWPersonID);

				});
				}
				}
				},
				error: function (xhr) {
				showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
				}
				});

				}
				});


				});
				$(document).ready(function () {
						$("#txtReferedTo").blur(function () {
						debugger;
						var txtReferedTo = $('#txtReferedTo').val();
						if (txtReferedTo != "") {
						debugger;
						$.ajax({
						type: 'GET',
						url: '/ComplainManagement/ComplainForm/GetUserDetails',
						datatype: "json",
						contentType: 'application/json; charset=utf-8',
						data: { "UserName": txtReferedTo },

						async: false,
						success: function (data) {
						debugger;
						if (data != null) {
						if (Object.keys(data).length != 0) {
						$.each(data, function (key, value) {
						//$('#TxtName').val(value.FullName);


						$('#txtReferedTo').val(value.FullName);

						$('#lblReferedTo').val(value.EDWPersonID);

				});
				}
				}
				},
				error: function (xhr) {
				showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
				}
				});

				}
				});


				});
				$(document).ready(function () {
						$("#txtResponseCommunited").blur(function () {
						debugger;
						var txtResponseCommunited = $('#txtResponseCommunited').val();
						if (txtResponseCommunited != "") {
						debugger;
						$.ajax({
						type: 'GET',
						url: '/ComplainManagement/ComplainForm/GetUserDetails',
						datatype: "json",
						contentType: 'application/json; charset=utf-8',
						data: { "UserName": txtResponseCommunited },

						async: false,
						success: function (data) {
						debugger;
						if (data != null) {
						if (Object.keys(data).length != 0) {
						$.each(data, function (key, value) {
						//$('#TxtName').val(value.FullName);


						$('#txtResponseCommunited').val(value.FullName);

						$('#lblResponseCommunitedby').val(value.EDWPersonID);

				});
				}
				}
				},
				error: function (xhr) {
				showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
				}
				});

				}
				});


				});
				$(document).ready(function () {
			     	$("#txtResponseCommunitedAppeal").blur(function () {
						debugger;
						var txtResponseCommunitedAppeal = $('#txtResponseCommunitedAppeal').val();
						if (txtResponseCommunitedAppeal != "") {
							debugger;
							$.ajax({
								type: 'GET',
								url: '/ComplainManagement/ComplainForm/GetUserDetails',
								datatype: "json",
								contentType: 'application/json; charset=utf-8',
								data: { "UserName": txtResponseCommunitedAppeal },

								async: false,
								success: function (data) {
									debugger;
									if (data != null) {
										if (Object.keys(data).length != 0) {
											$.each(data, function (key, value) {
												//$('#TxtName').val(value.FullName);


												$('#txtResponseCommunitedAppeal').val(value.FullName);

												$('#lbltxtResponseCommunitedAppeal').val(value.EDWPersonID);

											});
										}
									}
								},
								error: function (xhr) {
									showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
								}
							});

						}
				});


						});
		        $(document).ready(function () {
				     $("#txtAcknowledgeby").blur(function () {
			         	debugger;
					   var txtAcknowledgeby = $('#txtAcknowledgeby').val();
					   if (txtAcknowledgeby != "") {
					debugger;
					$.ajax({
						type: 'GET',
						url: '/ComplainManagement/ComplainForm/Acknowledge',
						datatype: "json",
						contentType: 'application/json; charset=utf-8',
						data: { "UserName": txtAcknowledgeby },

						async: false,
						success: function (data) {
							debugger;
							if (data != null) {
								if (Object.keys(data).length != 0) {
									$.each(data, function (key, value) {
										//$('#TxtName').val(value.FullName);


										$('#txtAcknowledgeby').val(value.FullName);

										$('#lblAcknowledgeby').val(value.EDWPersonID);

									});
								}
							}
						},
						error: function (xhr) {
							showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
						}
					});

				}
			});


		});
	        	$(document).ready(function () {
	    		$("#txtAppealComm").blur(function () {
				debugger;
				var txtAppealComm = $('#txtAppealComm').val();
				if (txtAppealComm != "") {
					debugger;
					$.ajax({
						type: 'GET',
						url: '/ComplainManagement/ComplainForm/Acknowledge',
						datatype: "json",
						contentType: 'application/json; charset=utf-8',
						data: { "UserName": txtAppealComm },

						async: false,
						success: function (data) {
							debugger;
							if (data != null) {
								if (Object.keys(data).length != 0) {
									$.each(data, function (key, value) {
										console.log(value.FullName);
										$('#txtAppealComm').val(value.FullName);
										$('#txtAppealEDWID').val(value.EDWPersonID);

									});
								}
							}
						},
						error: function (xhr) {
							showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Modules, Please contact with administrator", "warning", "btn-danger");
						}
					});

				}
			});


	                    	});

	          	$('#dllClassification').change(function () {
					debugger;
					var htm = "";
					var $select = $('#ddlComplaintCategoryName');
					$select.html(htm);
					//$select.append('<option value="">Select</option>');
					try {
						var ClassificationID = Number($('#dllClassification').val());
						if (ClassificationID > 0) {
							debugger;
							$.ajax({
								type: 'GET',
								url: '/ComplainManagement/ComplainForm/GetCategoryRefral',
								datatype: "json",
								contentType: 'application/json; charset=utf-8',
								data: { "ClassificationID": ClassificationID },
								async: false,
								success: function (data) {
									debugger;
									if (data != null) {
										if (Object.keys(data).length != 0) {
											$.each(data, function (key, value) {
												$select.append($("<option />").val(value.ComplaintCategoryID).html(value.ComplaintCategoryName));


											});
										}
									}
								},
								error: function (xhr) {
									showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Complaint Category, Please contact with administrator", "warning", "btn-danger");
								}
							});

						}

						if (ClassificationID > 0) {
							debugger;
							$.ajax({
								type: 'Get',
								url: '/ComplainManagement/ComplainForm/spGetClassdesc',
								dataType: 'json',

								data: { "catid": ClassificationID },
								async: false,
								success: function (data) {
									debugger;
									if (data != null) {
										if (Object.keys(data).length != 0) {
											$.each(data, function (key, value) {

												debugger;

												//$("input[name='email']").tooltip('destroy');
												$("#testbox2").tooltip('destroy');
												//Adds new one
												setTimeout(function () {
													$("#testbox2").tooltip({
														title: value.ComplaintClassificationDescription,
														placement: 'top',
														template: '<div class="tooltip" role="tooltip">' +
															'<div class="tooltip-arrow"></div>' +
															'<div class="tooltip-inner"></div></div>'

													});

													//Shows it
													$("#testbox2").tooltip('show');
												}, 250);


												//popover.popover('destroy').popover({
												//	placement: "left",
												//	html: true,
												//	title: value.ComplaintCategoryName,
												//	content: value.ComplaintCategoryDescription,
												//})
												//	.popover('show');


											});
										}
									}
								},
								error: function () {

									showMessage("Oops, Something went wrong", "Error Occured while Routing Charges Ajax Call, Please contact with administrator", "warning", "btn-danger");
								}
							});

						}

					}
					catch (Exception) {
						showMessage("Error Occured while Loading the Complaint Category", Exception.message, "warning", "btn-danger");
					}
		});
	           	$('#dllCountry').change(function () {


						debugger;
						  var htm = "";
						  var htm1 = "";
						  var $select = $('#dllFieldSite');
						  $select.html(htm);
						  $select.append('<option value=""> </option>');

						  var $select1 = $('#ddlProjectIdentifier');
						  $select1.html(htm1);
						  $select1.append('<option value=""> </option>');



						  var $select2 = $('#dllFacility');
						  $select2.html(htm1);
						  $select2.append('<option value=""> </option>');



						try {
							var CountryCode =$('#dllCountry').val();
							if (CountryCode != "") {
								debugger;
								$.ajax({
									type: 'GET',
									url: '/ComplainManagement/ComplainForm/GetFieldSite',
									datatype: "json",
									contentType: 'application/json; charset=utf-8',
									data: { "CountryCode": CountryCode },
									async: false,
									success: function (data) {
										debugger;
										if (data != null) {
											if (Object.keys(data).length != 0) {
												$.each(data, function (key, value) {
													$select.append($("<option />").val(value.FieldSiteCode).html(value.FieldSiteName));


												});
											}
										}
									},
									error: function (xhr) {
										showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Complaint Category, Please contact with administrator", "warning", "btn-danger");
									}
								});
								$.ajax({
									type: 'GET',
									url: '/ComplainManagement/ComplainForm/GetProject',
									datatype: "json",
									contentType: 'application/json; charset=utf-8',
									data: { "CountryCode": CountryCode },
									async: false,
									success: function (data) {
										debugger;
										if (data != null) {
											if (Object.keys(data).length != 0) {
												$.each(data, function (key, value) {
													$select1.append($("<option />").val(value.ProjectIdentifier).html(value.DropDownDisplay));


												});
											}
										}
									},
									error: function (xhr) {
										showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Project, Please contact with administrator", "warning", "btn-danger");
									}
								});
								$.ajax({
									type: 'GET',
									url: '/ComplainManagement/ComplainForm/GetFacilities',
									datatype: "json",
									contentType: 'application/json; charset=utf-8',
									data: { "CountryCode": CountryCode },
									async: false,
									success: function (data) {
										debugger;
										if (data != null) {
											if (Object.keys(data).length != 0) {
												$.each(data, function (key, value) {
													$select2.append($("<option />").val(value.FacilityID).html(value.FacilityName));


												});
											}
										}
									},
									error: function (xhr) {
										showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Project, Please contact with administrator", "warning", "btn-danger");
									}
								});




							}

						}
						catch (Exception) {
							showMessage("Error Occured while Loading the Complaint Category", Exception.message, "warning", "btn-danger");
						}
	            	});
		        $('#dllFacility').change(function () {
					debugger;
					//var htm = "";
					//var $select = $('#ddlComplaintCategoryName');
					//$select.html(htm);
					//$select.append('<option value="">Select</option>');
					try {
						var FacilityID = Number($('#dllFacility').val());
						if (FacilityID > 0) {
							debugger;
							$.ajax({
								type: 'GET',
								url: '/ComplainManagement/ComplainForm/GetFacilityDetails',
								datatype: "json",
								contentType: 'application/json; charset=utf-8',
								data: { "FacilityID": FacilityID },
								async: false,
								success: function (data) {
									debugger;
									if (data != null) {
										if (Object.keys(data).length != 0) {
											$.each(data, function (key, value) {

												$("#txtProvinceText").focus();
												$("#txtProvinceText").val(value.AdminOneName);
												$("#txtDistrictText").focus();
												$("#txtDistrictText").val(value.AdminTwoName);
												$("#txtCommunityText").focus();
												$("#txtCommunityText").val(value.CityAdminName);
												//$select.append($("<option />").val(value.ComplaintCategoryID).html(value.ComplaintCategoryName));
											});
										}
									}
								},
								error: function (xhr) {
									showMessage("Oops, Something went wrong", "Error Occured while Ajax Call to load Complaint Category, Please contact with administrator", "warning", "btn-danger");
								}
							});

						}
						}
					catch (Exception) {
						showMessage("Error Occured while Loading the Complaint Category", Exception.message, "warning", "btn-danger");
			}
		});
					
		// SAVE  FUNCTIONS

		var viewBag = "";
		var DeletedMedia = [];
		var DeletedMediaAppeal = [];

		$('#btnSaveUser').on('click', function () {
			debugger;

					var CommunityBasedComplaintID = 0;

			       var IsDBSaved = 0;
			       var Finalmsg = "";

					//debugger;

			if (MyValidation()) {
								try {

									var CBC = {
										//CommunityBasedComplaint  Table Fields
										ID: $('#txtCommunityBasedComplaintID').val(),
										CountryCode: $('#dllCountry').val(),
										FacilityID: $('#dllFacility').val(),
										ComplaintCommunicationMethodID: Number($('#dllComplaintCommunicationMethodID').val()),
										ComplaintCategoryID: Number($('#ddlComplaintCategoryName').val()),
										ComplaintClassificationID: Number($('#dllClassification').val()),
										FieldSiteCode: $('#dllFieldSite').val(),
										ProjectIdentifier: $('#ddlProjectIdentifier').val(),
										SubmitDate: $('#lblSubmitDate').val(),
										ReceivedDate: FormatDate2($('#txtReceivedDate').val()),
										ReceivedByEDWPersonID: Number($('#lblrecivedbyID').val()),//hidden label be insert instead of Name
										ReceivedByIMCStaffFlag: $("#chkReceivedByIMCStaffFlag").prop("checked") == true ? 1 : 0,
										ReceivedByNonIMCName: $('#txtReceivedByNonIMCName').val(),
										EnteredTimestamp: FormatDate2($('#txtDateComplainwasRaised').val()),
										EnteredByEDWPersonID: Number($('#lblEnteredByEDWPersonID').val()), // this is hidden fields value
										ClosedDate: FormatDate2($('#txtClosedDate').val()),
										ClosedByEDWPersonID: $('#lblClosedByEDWPersonID').val(),
										ComplaintDescription: $('#txtComplaintDescription').val(),
										OtherComplaintCommunicationMethodText: $('#txtOtherComplaintCommunicationMethodText').val(),
										SubjectText: $('#txtSubject').val(),
										AcknowledgementProvidedFlag: $("#chkAcknowledgementProvidedFlag").prop("checked") == true ? 1 : 0,
										//AppealedFlag: $("#chkResponseProvidedFlagAppeal").prop("checked") == true ? 1 : 0,
										AppealedFlag:0,
										ResponseProvidedFlag: $("#chkResponseProvidedFlag").prop("checked") == true ? 1 : 0,
										ReferralRequiredFlag: $("#chkReferralRequiredFlag").prop("checked") == true ? 1 : 0,

										InternalReferralLevelID: Number($('#dllReferralLevel').val()),
										NoAcknowledgementReasonDescription: $('#txtNoAcknowledgementReasonDescription').val(),
										NoReferralReasonDescription: $('#txtNoReferralReasonDescription').val(),
										NoResponseReasonDescription: $('#txtNoResponseReasonDescription').val(),
										ResponseByNonIMCName: $('#txtResponseByNonIMCName').val(),
										OtherVulnerabilityText: $('#txtOtherVulnerabilityText').val()

									}
									var selectedOptions = [];
									$("#dllFieldSectorCode option:selected").each(function () {
										var value = $(this).val();

										if ($.trim(value)) {
											selectedOptions.push({
												'FieldSectorCode': value,
												'OtherSectorText': $('#txtOtherSectorProgram').val()
											}
											);
										}
									});
									var Vuloptions = [];
									$("#ddlVulnerabilityTypeID option:selected").each(function () {
										var value = $(this).val();
										if ($.trim(value)) {
											Vuloptions.push({
												'VulnerabilityTypeID': value.trim()
											});
										}
									});
								
									var CD = {
										//VComplaintDetails Table Fields CompianID
										EDWComplaintantID: $('#lblEDWComplaintantID').val(),
										//CommunityBasedComplaintID  Main Table column backend
										AgeYearNumber: $('#txtAgeYearNumber').val(),
										PrimaryLanguageDialectCode: $('#ddlLanguageName').val(),
										SexCode: $('#ddlSexCode').val(),
										PersonName: $('#txtPersonName').val(),
										AddressText: $('#txtAddressText').val(),
										PhoneNumber: $('#txtPhoneNumber').val(),
										EmailAddress: $('#txtEmailAddress').val(),
										ComplainantProgramRelationshipText: $('#txtComplainantProgramRelationshipText').val(),
										OtherCommunicationAvenueText: $('#txtOtherCommunicationAvenueText').val(),
										ComplainantAllowContactFlag: $("#chkComplainantAllowContactFlag").prop("checked") == true ? 1 : 0,
										ComplainantAllowVisitFlag: $("#chkComplainantAllowVisitFlag").prop("checked") == true ? 1 : 0,
										OtherLanguageDialectText: $('#txtOtherLanguageDialectText').val(),
										ComplainantQuestionsAddressedFlag: $('#chkComplainantQuestionsAddressedFlag').prop("checked") == true ? 1 : 0,
										FollowUpContactDetailsFlag: $('#chkFollowUpContactDetailsFlag').prop("checked") == true ? 1 : 0,
										HandlingProcessExplainedFlag: $('#chkHandlingProcessExplainedFlag').prop("checked") == true ? 1 : 0,
										ProcessTimelineDiscussedFlag: $('#chkProcessTimelineDiscussedFlag').prop("checked") == true ? 1 : 0,
										ResponseReceivalExplainedFlag: $('#chkResponseReceivalExplainedFlag').prop("checked") == true ? 1 : 0,
									}
									var CT = {

										AckEDWPersonID: $('#lblAcknowledgeby').val(),
										AckCommunicationDate: FormatDate2($('#txtAcknowledgementProvidedDate').val()),
										AckCommunicationMethodID: Number($('#ddlAcknowledgementCommunicationMethodID').val()),
										AckOtherCCMText: $('#txtOtherComplaintCommunicationMethodTextAck').val(),

										//Internal
										InternalEDWPersonID: $('#lblReferedTo').val(),
										InternalCommunicationDate: FormatDate2($('#txtInternalDateofreferral').val()),
										InternaltxtHQCommunicationDate: FormatDate2($('#txtHQsentDate').val()),
										InternalCommunicationMethodID: $('#dllethics').val(),
										InternalComment: $('#txtInternalReferralcomments').val(),
										InternalOtherCCMText: $('#txtOtherCommunicatioMethodInternal').val(),

										//First Response
										FirstResponseEDWPersonID: $('#lblResponseCommunitedby').val(),
										FirstResponseCommunicationDate: FormatDate2($('#txtCommunicationDate').val()),
										FirstResponseCommunicationStageID: 53,
										FirstResponseCommunicationMethodID: $('#ddlResponseCommunicationMethodID').val(),
										FirstResponseComment: $('#txtResponseComments').val(),
										FirstResponseOtherCCMText: $('#txtOtherComplaintCommunicationMethodTextResponse').val(),

										//Appeal Response

										//ResponseProvidedFlagAppeal: $('#chkResponseProvidedFlagAppeal').prop("checked") == true ? 1 : 0,
										AppealResponseEDWPersonID: $('#lbltxtResponseCommunitedAppeal').val(),
										AppealResponseCommunicationDate: FormatDate2($('#txtCommunicationDateAppeal').val()),

										AppealResponseCommunicationMethodID: $('#ddlResponseCommunicationMethodIDAppeal').val(),

										AppealResponseOtherCCMText: $('#txtOtherCCMTextAppeal').val(),
										//AppealResponseComment
									}
									var External = {
										// External Table Fields with communicatioID
										ReferralDate: FormatDate2($('#txtExtReferralDate').val()),
										ReferralAgencyName: $('#txtReferralAgencyName').val(),
										ReferralPersonName: $('#txtReferralPersonName').val(),
										ReferralPersonPositionText: $('#txtReferralPersonPositionText').val(),
										ContactComment: $('#txtExternalContactComment').val(),
										HQDisclosureAuthorizationText: $('#txtHQDisclosureAuthorizationText').val()
									}
									var Resolution = {
										//Resolution with CompianID
										InvestigationDescription: $('#txtInvestigationDescription').val(),
										InvestigationPointOfContactName: $('#txtInvestigationPointOfContactName').val(),
										CorrectiveActionDescription: $('#txtCorrectiveActionDescription').val(),
										ResolutionDate: FormatDate2($('#txtResolutionDate').val())
									}
									var ComAppeal = {
										//Appeal Table and Appeal Committee table fields
										AppealDate: FormatDate2($('#txtAppealDate').val()),
										ProcessDescription: $('#txtProcessDescription').val(),
										AppealReceivedCommunicationMethodID: $('#ddlAppealReceivedCommunicationMethodID').val(),
										AppealResolutionDate: FormatDate2($('#txtAppealResolutionDate').val()),
										AppealResolutionDescription: $('#txtAppealResolutionDescription').val(),
										OtherComplaintCommunicationMethodText: $('#txtOtherComplaintCommunicationMethodTextAppeal').val()
									}
									var ACoptions = [];

									$("#tblAC tr:gt(0)").each(function () {
										var value = $(this);
										var appcommedwid = $.trim(value.find('td:eq(2)').html());//td:eq(0) means first td of this row


										if ($.trim(appcommedwid)) {
											ACoptions.push({
												'EDWPersonID': appcommedwid.trim(),
											});
										}

									});
									var urlToSave = "@Url.Action("SaveComplaint", "ComplainForm", new { Area = "ComplainManagement" })";
									debugger;
									$.ajax({
										dataType: "json",
										contentType: 'application/json; charset=utf-8',
										traditional: true,
										url: urlToSave,
										type: "POST",
										async: false,
										data: JSON.stringify({ "compID": $('#txtCommunityBasedComplaintID').val(), "edwID": $('#lblEDWComplaintantID').val() , "CBC": CBC, "Vul": Vuloptions, "CD": CD, "External": External, "CT": CT, "Resolution": Resolution, "FieldSector": selectedOptions, "ComAppeal": ComAppeal, "AC": ACoptions, "DeletedMedia": DeletedMedia, "DeletedMediaAppeal": DeletedMediaAppeal}),

										success: function (data) {
											debugger;
											if (data != null) {

													var msg = data.split("-");
													if (msg[0] == "Saved" || msg[0] == "Updated") {
														CommunityBasedComplaintID = msg[1];
														IsDBSaved = 1;
														Finalmsg =  " Complaint ID  :" + CommunityBasedComplaintID ;

                                                    } else
                                                if (msg[0] == "Session Time Out")
                                                {
                                                    window.location = "/ComplainManagement/Login/Index";
                                                }
													else {
														showMessage("Alert", "Error Occurred while saving the records", "warning", "btn-danger");
													}



											}
										},

										error: function () {

											showMessage("Oops, Something went wrong", "Error Occured while Ajax Call, Please contact with administrator", "warning", "btn-danger");

										}
									});
									//initial form  media
									var isNewMedia = 0;
									$('#TableFiles tbody tr').each(function () {
										debugger;
										var $tds = $(this).find('td');
										if ($tds.eq(6).text() == 1) {
											isNewMedia = 1;
										}
									});
									//appeal media
									var isNewMediaAppeal = 0;
									$('#TableFiles1 tbody tr').each(function () {
										debugger;
										var $tds = $(this).find('td');
										if ($tds.eq(6).text() == 1) {
											isNewMediaAppeal = 1;
										}
									});
									debugger;
									if (CommunityBasedComplaintID > 0 && sr > 0 && isNewMedia == 1) {
										formData.delete('CommunityBasedComplaintID');
										formData.append('CommunityBasedComplaintID', CommunityBasedComplaintID);
										$('#TableFiles tbody tr').each(function () {
											debugger;
											var $tds = $(this).find('td');

											formData.delete($tds.eq(1).text() + '-Title');
											formData.delete($tds.eq(1).text() + '-Remarks');

											formData.append($tds.eq(1).text() + '-Title', $("#txtTitle-" + $tds.eq(0).text()).val());
											formData.append($tds.eq(1).text() + '-Remarks', $("#txtRemarks-" + $tds.eq(0).text()).val());

											$tds.eq(6).text(2);

										});
										debugger;
										$.ajax({
											type: 'POST',
											url: '/ComplainManagement/ComplainForm/UploadFile',
											dataType: 'json',
											enctype: 'multipart/form-data',
											processData: false,
											contentType: false,
											//data: JSON.stringify({ "ApplicationDetail": Application }),
											data: formData,
											async: true,
											beforeSend: function () {
												debugger;
												//$('#ProcessingModal').modal('show');
											},
											complete: function () {
												//$('#ProcessingModal').modal('hide');
											},
											cache: false,
											success: function (data) {
												debugger;
												if (data.length > 0) {
													if (data == "Uploaded") {
														Finalmsg = Finalmsg + ", and Complaint files also uploaded";

													}
													else {
														showMessage("Something went wrong while Uploading Media", data, "warning", "btn-danger");
													}
												}
											},
											error: function () {
												showMessage("Oops, Something went wrong", "Error Occured while Ajax Call, Please contact with administrator", "warning", "btn-danger");
											}
										});
									}

									if (CommunityBasedComplaintID > 0 && sr2 > 0 && isNewMediaAppeal == 1) {
										formData2.delete('CommunityBasedComplaintID');
										formData2.append('CommunityBasedComplaintID', CommunityBasedComplaintID);
										$('#TableFiles1 tbody tr').each(function () {
											debugger;
											var $tds = $(this).find('td');

											formData2.delete($tds.eq(1).text() + '-Title');
											formData2.delete($tds.eq(1).text() + '-Remarks');

											formData2.append($tds.eq(1).text() + '-Title', $("#txtTitle-" + $tds.eq(0).text()).val());
											formData2.append($tds.eq(1).text() + '-Remarks', $("#txtRemarks-" + $tds.eq(0).text()).val());

											$tds.eq(6).text(2);

										});
										debugger;
										$.ajax({
											type: 'POST',
											url: '/ComplainManagement/ComplainForm/UploadFileAppeal',
											dataType: 'json',
											enctype: 'multipart/form-data',
											processData: false,
											contentType: false,
											//data: JSON.stringify({ "ApplicationDetail": Application }),
											data: formData2,
											async: true,
											beforeSend: function () {
												debugger;
												//$('#ProcessingModal').modal('show');
											},
											complete: function () {
												//$('#ProcessingModal').modal('hide');
											},
											cache: false,
											success: function (data) {
												debugger;
												if (data.length > 0) {
													if (data == "Uploaded") {
														Finalmsg = Finalmsg + ", and Complaint Appeal files also uploaded";
													}
													else {
														showMessage("Something went wrong while Uploading Media", data, "warning", "btn-danger");
													}
												}
											},
											error: function () {
												showMessage("Oops, Something went wrong", "Error Occured while Ajax Call, Please contact with administrator", "warning", "btn-danger");
											}
										});
									}


									debugger;
									if (IsDBSaved == 1 && IsReturnedFromEdit==0) {
										showMessageSuccess("Complain  Successfully Submitted", Finalmsg, "success", "btn-success", CommunityBasedComplaintID );
									}
									else if (IsDBSaved == 1 && IsReturnedFromEdit == 1) {
										showMessage("Complain  Successfully Submitted", Finalmsg, "success", "btn-success");
									}
								}
								catch (Exception)
								{
									showMessage("Error Occured while Saving the Application", Exception.message, "warning", "btn-danger");
								}
							}


					});



		//formatedDate
		function showMessage(MessageTitle, MsgText, ALType, BtnClass) {
				debugger;
				swal({
				title: MessageTitle,
				text: MsgText,
				allowOutsideClick: true,
				type: ALType,
				showCancelButton: false,
				confirmButtonClass: BtnClass,
				confirmButtonText: "Okay",
				closeOnConfirm: false

				});
		}

		function FormatDate2(date) {

				var dtParts = date.split('/');
				day = dtParts[0];
				month = dtParts[1];
				year = dtParts[2];

				//if (month.length < 2) month = '0' + month;
				//if (day.length < 2) day = '0' + day;
				var Finaldate = [year, month, day].join('-');
				return Finaldate;
				//return [day, month, year].join('/');
		}
		//this method is use to delete a doc grid
		function DeleteDoc(row, ID) {

		debugger;

		var status = $(row).closest("tr").find('td').eq(6).text().trim()

		if (status == 1) {

		formData.delete($(row).closest("tr").find('td').eq(1).text().trim());
		$(row).closest("tr").remove();
		sr = Number(sr) - 1;

		}
		else if (status == 2 && ID > 0) {
		$(row).closest("tr").find('td').eq(6).text("3");
		$(row).closest("tr").hide();

		DeletedMedia.push({
			CommunityBasedComplaintDocID: ID

		});
		}

		swal.close();
		}
		function DeleteDoc2(row, ID) {

		debugger;

		var status = $(row).closest("tr").find('td').eq(6).text().trim()

		if (status == 1) {

					formData2.delete($(row).closest("tr").find('td').eq(1).text().trim());
					$(row).closest("tr").remove();
					sr2 = Number(sr2) - 1;

		}
		else if (status == 2 && ID > 0) {
					$(row).closest("tr").find('td').eq(6).text("3");
					$(row).closest("tr").hide();

					DeletedMediaAppeal.push({
					CommunityBasedComplaintDocID: ID


		});
		}

		swal.close();
		}
		$("#FileUpload").on("change", function () {
					debugger;
					var files = $(this).get(0).files;
					var tableRow = "";
					var Ext = "";
					var Size = 0;
		for (var i = 0; i < files.length; i++) {

						Ext = files[i].name.substring(files[i].name.lastIndexOf('.') + 1, files[i].name.length).toLowerCase();
						Size = (Number(files[i].size) / 1024) / 1024; // Divided once with 1024 converts into KB and divided twice with 1024 converts into MB
						if (Ext == 'pdf' || Ext == 'jpg' || Ext == 'png' || Ext == 'doc' || Ext == 'docx' || Ext == 'xls' || Ext == 'xlsx' || Ext == 'gif' || Ext == 'jpeg') {
						if (Size <= 10) {
						formData.append(files[i].name, files[i]);
						sr += 1;
						tableRow += "<tr>";
						tableRow += "<td>" + sr + "</td>"
						tableRow += "<td>" + files[i].name + "</td>";
						tableRow += "<td><input   type='hidden' class='form-control' id='txtTitle-" + sr + "' /> </td>";

						tableRow += "<td><input  type='hidden' class='form-control' id='txtRemarks-" + sr + "' /> </td>";
						tableRow += "<td></td>"
						tableRow += "<td><button onclick='showMessageConfirmation(this,0)'  type='button' class='btn btn-sm btn-danger'>";
						tableRow += " <i class='fa fa-trash'></i> Delete</button></td>";
						tableRow += "<td style='display:none'>1</td>"
						tableRow += "</tr>"
		}
		else {
	           	showMessage("File size exceeded ", files[i].name + " is greater then 10 MB, Maximum 10 MB allowed to upload", "warning", "btn-danger");
		     }
		}
		else {
		         showMessage("File type not allowed ", files[i].name + ", this file type is not allowed", "warning", "btn-danger");
	     	}
		}

		$("#TableFiles tbody").append(tableRow);
		});


		$("#FileUpload1").on("change", function () {
						debugger;
						var files = $(this).get(0).files;
						var tableRow = "";
						var Ext = "";
						var Size = 0;


		for (var i = 0; i < files.length; i++) {

						Ext = files[i].name.substring(files[i].name.lastIndexOf('.') + 1, files[i].name.length).toLowerCase();
						Size = (Number(files[i].size) / 1024) / 1024; // Divided once with 1024 converts into KB and divided twice with 1024 converts into MB
						if (Ext == 'pdf' || Ext == 'jpg' || Ext == 'png' || Ext == 'doc' || Ext == 'docx' || Ext == 'xls' || Ext == 'xlsx' || Ext == 'gif' || Ext == 'jpeg') {
						if (Size <= 10) {
						formData2.append(files[i].name, files[i]);
						sr2 += 1;
						tableRow += "<tr>";
						tableRow += "<td>" + sr2 + "</td>"
						tableRow += "<td>" + files[i].name + "</td>";
						tableRow += "<td><input   type='hidden' class='form-control' id='txtTitle-" + sr2 + "' /> </td>";

						tableRow += "<td><input  type='hidden' class='form-control' id='txtRemarks-" + sr2 + "' /> </td>";
						tableRow += "<td></td>"
						tableRow += "<td><button onclick='showMessageConfirmation2(this,0)'  type='button' class='btn btn-sm btn-danger'>";
						tableRow += " <i class='fa fa-trash'></i> Delete</button></td>";
						tableRow += "<td style='display:none'>1</td>"
						tableRow += "</tr>"
		}
		else {
		              showMessage("File size exceeded ", files[i].name + " is greater then 10 MB, Maximum 10 MB allowed to upload", "warning", "btn-danger");
		        }
		     }
		else {
	                	showMessage("File type not allowed ", files[i].name + ", this file type is not allowed", "warning", "btn-danger");
		     }
		}

		$("#TableFiles1 tbody").append(tableRow);
		});
		function showMessageSuccess(MessageTitle, MsgText, ALType, BtnClass, ID) {
			//  $('#ProcessingModal').modal('hide');
			swal({
				title: MessageTitle,
				text: MsgText,
				allowOutsideClick: false,
				type: ALType,
				showCancelButton: false,
				confirmButtonClass: BtnClass,
				confirmButtonText: "Okay",
				closeOnConfirm: false


			},
				function () {
					var url = '/ComplainManagement/ComplainForm/Edit?ID=' + ID;
					window.location.href = url;
					//window.location.reload();
				});
		}


		function showMessageConfirmation(row, ID) {
		debugger;
		var fileName = $(row).closest("tr").find('td').eq(1).text().trim();


						swal({
						title: 'Are your sure you want to delete document',
						text: fileName,
						type: 'warning',
						allowOutsideClick: false,
						showConfirmButton: true,
						showCancelButton: true,
						confirmButtonClass: 'btn-danger',
						cancelButtonClass: 'btn-info',
						closeOnConfirm: false,
						closeOnCancel: true,
						confirmButtonText: 'Yes, Delete It',
						cancelButtonText: 'No, I am not sure',
						},
						function (isConfirm) {
						if (isConfirm) {
						DeleteDoc(row, ID);
						} else {

						}
		});


		}
		function showMessageConfirmation2(row, ID) {
		debugger;


		var fileName = $(row).closest("tr").find('td').eq(1).text().trim();


					swal({
					title: 'Are your sure you want to delete document',
					text: fileName,
					type: 'warning',
					allowOutsideClick: false,
					showConfirmButton: true,
					showCancelButton: true,
					confirmButtonClass: 'btn-danger',
					cancelButtonClass: 'btn-info',
					closeOnConfirm: false,
					closeOnCancel: true,
					confirmButtonText: 'Yes, Delete It',
					cancelButtonText: 'No, I am not sure',
		},
		function (isConfirm) {
					if (isConfirm) {
					DeleteDoc2(row, ID);
					} else {

					}
		});


		}
		function showMessageConfirmation3(row, ID) {
			debugger;


			var fileName = $(row).closest("tr").find('td').eq(1).text().trim();


			swal({
				title: 'Are your sure you want to delete row',
				text: fileName,
				type: 'warning',
				allowOutsideClick: false,
				showConfirmButton: true,
				showCancelButton: true,
				confirmButtonClass: 'btn-danger',
				cancelButtonClass: 'btn-info',
				closeOnConfirm: false,
				closeOnCancel: true,
				confirmButtonText: 'Yes, Delete It',
				cancelButtonText: 'No, I am not sure',
			},
				function (isConfirm) {
					if (isConfirm) {
						DeleteAppealRow(row, ID);
					} else {

					}
				});


		}
		function DeleteAppealRow(row, ID) {

			$(row).closest('tr').remove();
			AppealResetSr();
			swal.close();
		}

		function AppealResetSr() {
			debugger;
			var sr = 0;
			var table = $("#tblAC tbody");
			table.find('tr').each(function (i) {
				var $Etds = $(this).find('td');
				debugger;
					sr = sr + 1;
					 $Etds.eq(0).text(sr);

				//$(row).closest("tr").find('td').eq(6).text("3");



			});
		}
		$("#btnAddAppeal").click(function () {
			var table = $("#tblAC tbody");
			debugger;
			var name = $("#txtAppealComm").val();
			var AppealEDWID = $("#txtAppealEDWID").val();
			var tableRow = "";

			if (AppealEDWID != "") {

				IsAlreadyExist = 0;

				table.find('tr').each(function (i) {
					var $Etds = $(this).find('td'),

						ExistingID = $Etds.eq(2).text().trim();



					if (Number(ExistingID) == AppealEDWID) {
						showMessage("Already selected ", name, "warning", "btn-danger");

						IsAlreadyExist = 1;
						return false;
					}


				});


				if (IsAlreadyExist == 0) {




						sr += 1;
						tableRow += "<tr>";
						tableRow += "<td></td>"
						tableRow += "<td>" + name + "</td>"
					    tableRow += "<td style='display:none'>" + AppealEDWID + "</td>";
						tableRow += "<td><button onclick='showMessageConfirmation3(this,0)'  type='button' class='btn btn-sm btn-danger'>";
						tableRow += " <i class='fa fa-trash'></i> Delete</button></td>";
						tableRow += "<td style='display:none'>1</td>"
						tableRow += "</tr>"
						$("#tblAC tbody").append(tableRow);

						AppealResetSr();
						$("#txtAppealComm").val('');
						$("#txtAppealEDWID").val('');


				}
			}
			else {

				showMessage("This Persons Does Not exists ", name, "warning", "btn-danger");
			}


		});


	</script>


}

